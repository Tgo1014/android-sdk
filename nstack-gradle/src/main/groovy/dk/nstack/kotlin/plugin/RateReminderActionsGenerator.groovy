package dk.nstack.kotlin.plugin

import groovy.json.JsonSlurper

class RateReminderActionsGenerator {

    static String generateActions(String packageName) {
        def url = TranslationPlugin.project.translation.contentUrl + "api/v2/notify/rate_reminder_v2/actions"
        def actionsJson = Util.getTextFromUrl(url)
        if (actionsJson.isEmpty()) {
            return ""
        }
        def actions = new JsonSlurper().parseText(actionsJson).data as List<String>

        def enumString = "package $packageName\n\n"
        enumString += "import dk.nodes.nstack.kotlin.NStack\n\n"
        enumString += "/**\n * generated by nstack gradle plugin on ${new Date()}\n */\n"
        enumString += "enum class RateReminderAction(private val apiName: String) {\n\n"
        for (def i = 0; i < actions.size() - 1; ++i) {
            enumString += actionToEnumName(actions[i])
        }
        enumString += actionToEnumName(actions.last(), true)
        enumString += """
    fun sendToNStack() {
        NStack.rateReminderAction(apiName)
    }
}
"""
        return enumString
    }

    private static String actionToEnumName(String action, Boolean isLast = false) {
        def enumName = action.replace("-", "_").toUpperCase()
        def result = "\t$enumName(\"$action\")"
        if (!isLast) {
            result += ",\n"
        } else {
            result += ";\n"
        }
        return result
    }
}
