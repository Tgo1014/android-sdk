/**
 * NOTE: This class is auto generated by the Swagger Gradle Codegen for the following API: API
 *
 * More info on this tool is available on https://github.com/Yelp/swagger-gradle-codegen
 */

package dk.nodes.nstack.kotlin.codegen.apis

import okhttp3.RequestBody

import io.reactivex.Completable
import retrofit2.http.GET
import retrofit2.http.Headers

@JvmSuppressWildcards
interface ValidatorApi {
  /** 
   * Email
   * Validate email syntax On top of a simple syntax validation, there is DNS check also   #### Request details Method: `GET`  URL: `/api/v2/validator/email`  #### Headers `X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_  `X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_  #### Query params `email` (string) **required** _email to validate_  #### Response codes `200` OK  `412` Precondition failed (missing or invalid email)
   * The endpoint is owned by NStack v2 service owner
   * @param email  (required)
   */
  @Headers(
    "X-Operation-Id: Email",
    "Content-Type: application/json"
  )
  @GET("api/v2/validator/email")
  fun email(
    @retrofit2.http.Query("email") email: String
  ): Completable

  /** 
   * Email1
   * Validate email syntax On top of a simple syntax validation, there is DNS check also   #### Request details Method: `GET`  URL: `/api/v1/validator/email`  #### Headers `X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_  `X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_  #### Query params `email` (string) **required** _email to validate_  #### Response codes `200` OK  `412` Precondition failed (missing or invalid email)
   * The endpoint is owned by NStack v2 service owner
   * @param email  (required)
   */
  @Headers(
    "X-Operation-Id: Email1",
    "Content-Type: application/json"
  )
  @GET("api/v1/validator/email")
  fun email1(
    @retrofit2.http.Query("email") email: String
  ): Completable

  /** 
   * Phone
   * Validate phone number  #### Request details Method: `GET`  URL: `/api/v2/validator/phone`  #### Headers `X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_  `X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_  #### Query params `phone` (string) **required** _email to validate_  `fallback_country_code` (string) _Eg: [\"dk\", \"gb\", ...] - default is dk_  `twilio` (bool) _Validate against Twilio - Paid service!_  `twilio_type` (string) _Eg: [\"all\", \"mobile\", \"landline\"]_  #### Response codes `200` OK  `412` Precondition failed (missing or invalid email)
   * The endpoint is owned by NStack v2 service owner
   * @param phone  (required)
   */
  @Headers(
    "X-Operation-Id: Phone",
    "Content-Type: application/json"
  )
  @GET("api/v2/validator/phone")
  fun phone(
    @retrofit2.http.Query("phone") phone: Int
  ): Completable

  /** 
   * Phone1
   * Validate phone number  #### Request details Method: `GET`  URL: `/api/v1/validator/phone`  #### Headers `X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_  `X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_  #### Query params `phone` (string) **required** _email to validate_  `fallback_country_code` (string) _Eg: [\"dk\", \"gb\", ...] - default is dk_  `twilio` (bool) _Validate against Twilio - Paid service!_  `twilio_type` (string) _Eg: [\"all\", \"mobile\", \"landline\"]_  #### Response codes `200` OK  `412` Precondition failed (missing or invalid email)
   * The endpoint is owned by NStack v2 service owner
   * @param phone  (required)
   */
  @Headers(
    "X-Operation-Id: Phone1",
    "Content-Type: application/json"
  )
  @GET("api/v1/validator/phone")
  fun phone1(
    @retrofit2.http.Query("phone") phone: Int
  ): Completable

}
