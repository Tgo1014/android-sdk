/**
 * NOTE: This class is auto generated by the Swagger Gradle Codegen for the following API: API
 *
 * More info on this tool is available on https://github.com/Yelp/swagger-gradle-codegen
 */

package dk.nodes.nstack.kotlin.codegen.apis

import okhttp3.RequestBody

import io.reactivex.Completable
import retrofit2.http.DELETE
import retrofit2.http.GET
import retrofit2.http.Headers
import retrofit2.http.POST

@JvmSuppressWildcards
interface CollectionsApi {
  /** 
   * Create item
   * Create a new item to a array type collection #### Request details Method: `POST`  URL: `api/v2/content/responses/{collection_id}/items`  #### Headers `X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_  `X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_  #### URL Parameters `collection_id` (int) **required** _ID of content collection_  #### Post params  `All required keys`  #### Response codes(s) `200` OK  `401` Collectio does not have write access for api  `404` Entity not found  `412` Precondition failed _Please read response message_  `500` Internal server error _Please read response message_
   * The endpoint is owned by NStack v2 service owner
   * @param k0int  (required)
   * @param key1string  (required)
   * @param key2float  (required)
   * @param key3wysiwygsim  (required)
   * @param key4asset  (required)
   * @param key5boolean  (required)
   * @param key6wysiwygadvanced  (required)
   */
  @retrofit2.http.FormUrlEncoded
  @Headers(
    "X-Operation-Id: Createitem"
  )
  @POST("api/v2/content/collections/1/items")
  fun createitem(
    @retrofit2.http.Field("k0int") k0int: Int,
    @retrofit2.http.Field("key1string") key1string: String,
    @retrofit2.http.Field("key2float") key2float: Double,
    @retrofit2.http.Field("key3wysiwygsim") key3wysiwygsim: String,
    @retrofit2.http.Field("key4asset") key4asset: String,
    @retrofit2.http.Field("key5boolean") key5boolean: Boolean,
    @retrofit2.http.Field("key6wysiwygadvanced") key6wysiwygadvanced: String
  ): Completable

  /** 
   * Create item1
   * Create a new item to a array type collection #### Request details Method: `POST`  URL: `api/v1/content/responses/{collection_id}/items`  #### Headers `X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_  `X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_  #### URL Parameters `collection_id` (int) **required** _ID of content collection_  #### Post params  `All required keys`  #### Response codes(s) `200` OK  `401` Collectio does not have write access for api   `412` Precondition failed _Please read response message_  `445` Entity not found  `500` Internal server error _Please read response message_
   * The endpoint is owned by NStack v2 service owner
   * @param k0int  (required)
   * @param key1string  (required)
   * @param key2float  (required)
   * @param key3wysiwygsim  (required)
   * @param key4asset  (required)
   * @param key5boolean  (required)
   * @param key6wysiwygadvanced  (required)
   */
  @retrofit2.http.FormUrlEncoded
  @Headers(
    "X-Operation-Id: Createitem1"
  )
  @POST("api/v1/content/collections/1/items")
  fun createitem1(
    @retrofit2.http.Field("k0int") k0int: Int,
    @retrofit2.http.Field("key1string") key1string: String,
    @retrofit2.http.Field("key2float") key2float: Double,
    @retrofit2.http.Field("key3wysiwygsim") key3wysiwygsim: String,
    @retrofit2.http.Field("key4asset") key4asset: String,
    @retrofit2.http.Field("key5boolean") key5boolean: Boolean,
    @retrofit2.http.Field("key6wysiwygadvanced") key6wysiwygadvanced: String
  ): Completable

  /** 
   * Delete item
   * Create a new item to a array type collection #### Request details Method: `DELETE`  URL: `api/v2/content/responses/{collection_id}/items{item_id}`  #### Headers `X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_  `X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_  #### URL Parameters `collection_id` (int) **required** _ID of content collection_  `item_id` (int) **required** _ID of content collection item_  #### Response codes(s) `200` OK  `401` Collection does not have write access for api   `404` Entity not found  `500` Internal server error _Please read response message_
   * The endpoint is owned by NStack v2 service owner
   */
  @Headers(
    "X-Operation-Id: Deleteitem",
    "Content-Type: application/json"
  )
  @DELETE("api/v2/content/collections/1/items/13")
  fun deleteitem()
    : Completable

  /** 
   * Delete item1
   * Create a new item to a array type collection #### Request details Method: `DELETE`  URL: `api/v1/content/responses/{collection_id}/items{item_id}`  #### Headers `X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_  `X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_  #### URL Parameters `collection_id` (int) **required** _ID of content collection_  `item_id` (int) **required** _ID of content collection item_  #### Response codes(s) `200` OK  `401` Collection does not have write access for api  `445` Entity not found  `500` Internal server error _Please read response message_
   * The endpoint is owned by NStack v2 service owner
   */
  @Headers(
    "X-Operation-Id: Deleteitem1",
    "Content-Type: application/json"
  )
  @DELETE("api/v1/content/collections/1/items/13")
  fun deleteitem1()
    : Completable

  /** 
   * Update
   * Create a new item to a array type collection #### Request details Method: `POST`  URL: `api/v2/content/responses/{collection_id}/items`  #### Headers `X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_  `X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_  #### URL Parameters `collection_id` (int) **required** _ID of content collection_  #### Post params  `All required keys`  #### Response codes(s) `200` OK  `401` Collectio does not have write access for api   `404` Entity not found  `412` Precondition failed _Please read response message_  `500` Internal server error _Please read response message_
   * The endpoint is owned by NStack v2 service owner
   * @param k0int  (required)
   * @param key1string  (required)
   * @param key2float  (required)
   * @param key3wysiwygsim  (required)
   * @param key4asset  (required)
   * @param key5boolean  (required)
   * @param key6wysiwygadvanced  (required)
   */
  @retrofit2.http.FormUrlEncoded
  @Headers(
    "X-Operation-Id: Update"
  )
  @POST("api/v2/content/collections/1/items/14/update")
  fun update(
    @retrofit2.http.Field("k0int") k0int: Int,
    @retrofit2.http.Field("key1string") key1string: String,
    @retrofit2.http.Field("key2float") key2float: Double,
    @retrofit2.http.Field("key3wysiwygsim") key3wysiwygsim: String,
    @retrofit2.http.Field("key4asset") key4asset: String,
    @retrofit2.http.Field("key5boolean") key5boolean: Boolean,
    @retrofit2.http.Field("key6wysiwygadvanced") key6wysiwygadvanced: String
  ): Completable

  /** 
   * Update1
   * Create a new item to a array type collection #### Request details Method: `POST`  URL: `api/v1/content/responses/{collection_id}/items`  #### Headers `X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_  `X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_  #### URL Parameters `collection_id` (int) **required** _ID of content collection_  #### Post params  `All required keys`  #### Response codes(s) `200` OK  `401` Collectio does not have write access for api   `412` Precondition failed _Please read response message_  `445` Entity not found  `500` Internal server error _Please read response message_
   * The endpoint is owned by NStack v2 service owner
   * @param k0int  (required)
   * @param key1string  (required)
   * @param key2float  (required)
   * @param key3wysiwygsim  (required)
   * @param key4asset  (required)
   * @param key5boolean  (required)
   * @param key6wysiwygadvanced  (required)
   */
  @retrofit2.http.FormUrlEncoded
  @Headers(
    "X-Operation-Id: Update1"
  )
  @POST("api/v1/content/collections/1/items/14/update")
  fun update1(
    @retrofit2.http.Field("k0int") k0int: Int,
    @retrofit2.http.Field("key1string") key1string: String,
    @retrofit2.http.Field("key2float") key2float: Double,
    @retrofit2.http.Field("key3wysiwygsim") key3wysiwygsim: String,
    @retrofit2.http.Field("key4asset") key4asset: String,
    @retrofit2.http.Field("key5boolean") key5boolean: Boolean,
    @retrofit2.http.Field("key6wysiwygadvanced") key6wysiwygadvanced: String
  ): Completable

  /** 
   * View
   * Get a default type of content collection  #### Request details Method: `GET`  URL: `api/v2/content/responses/{collection_id}`  #### Headers `X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_  `X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_  #### URL Parameters `collection_id` (int) **required** _ID of content collection_  #### Response codes(s) `200` OK  `404` Entity not found  `500` Internal server error _Please read response message_
   * The endpoint is owned by NStack v2 service owner
   */
  @Headers(
    "X-Operation-Id: View",
    "Content-Type: application/json"
  )
  @GET("api/v2/content/collections/1")
  fun view()
    : Completable

  /** 
   * View1
   * Get a default type of content collection  #### Request details Method: `GET`  URL: `api/v1/content/responses/{collection_id}`  #### Headers `X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_  `X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_  #### URL Parameters `collection_id` (int) **required** _ID of content collection_  #### Response codes(s) `200` OK  `445` Entity not found  `500` Internal server error _Please read response message_
   * The endpoint is owned by NStack v2 service owner
   */
  @Headers(
    "X-Operation-Id: View1",
    "Content-Type: application/json"
  )
  @GET("api/v1/content/collections/1")
  fun view1()
    : Completable

  /** 
   * View item
   * Create a new item to a array type collection #### Request details Method: `GET`  URL: `api/v2/content/responses/{collection_id}/items{item_id}`  #### Headers `X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_  `X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_  #### URL Parameters `collection_id` (int) **required** _ID of content collection_  `item_id` (int) **required** _ID of content collection item_  #### Response codes(s) `200` OK  `401` Collection does not have write access for api  `445` Entity not found
   * The endpoint is owned by NStack v2 service owner
   */
  @Headers(
    "X-Operation-Id: Viewitem",
    "Content-Type: application/json"
  )
  @GET("api/v2/content/collections/1/items/5")
  fun viewitem()
    : Completable

  /** 
   * View item1
   * Create a new item to a array type collection #### Request details Method: `GET`  URL: `api/v1/content/responses/{collection_id}/items{item_id}`  #### Headers `X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_  `X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_  #### URL Parameters `collection_id` (int) **required** _ID of content collection_  `item_id` (int) **required** _ID of content collection item_  #### Response codes(s) `200` OK  `401` Collection does not have write access for api  `445` Entity not found 
   * The endpoint is owned by NStack v2 service owner
   */
  @Headers(
    "X-Operation-Id: Viewitem1",
    "Content-Type: application/json"
  )
  @GET("api/v1/content/collections/1/items/5")
  fun viewitem1()
    : Completable

}
