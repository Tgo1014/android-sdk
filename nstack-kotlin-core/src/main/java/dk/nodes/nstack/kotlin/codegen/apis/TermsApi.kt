/**
 * NOTE: This class is auto generated by the Swagger Gradle Codegen for the following API: API
 *
 * More info on this tool is available on https://github.com/Yelp/swagger-gradle-codegen
 */

package dk.nodes.nstack.kotlin.codegen.apis

import okhttp3.RequestBody

import io.reactivex.Completable
import retrofit2.http.GET
import retrofit2.http.Headers
import retrofit2.http.POST

@JvmSuppressWildcards
interface TermsApi {
  /** 
   * Index
   * List all Terms  #### Request details Method: `GET`  URL: `api/v2/content/terms`  #### Headers `X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_  `X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_   #### Response codes(s) `200` OK  `404` Entity not found  `500` Internal server error _Please read response message_
   * The endpoint is owned by NStack v2 service owner
   * @param nMeta  (required)
   */
  @Headers(
    "X-Operation-Id: Index",
    "Content-Type: application/json"
  )
  @GET("terms")
  fun index(
    @retrofit2.http.Header("N-Meta") nMeta: String
  ): Completable

  /** 
   * Index versions
   * List all Version  #### Request details Method: `GET`  URL: `api/v2/content/terms/{slugOrId}/versions`  #### Headers `X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_  `X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_  #### Response codes(s) `200` OK  `404` Entity not found  `500` Internal server error _Please read response message_
   * The endpoint is owned by NStack v2 service owner
   * @param nMeta  (required)
   */
  @Headers(
    "X-Operation-Id: Indexversions",
    "Content-Type: application/json"
  )
  @GET("api/v2/content/terms/some-terms-1/versions")
  fun indexversions(
    @retrofit2.http.Header("N-Meta") nMeta: String
  ): Completable

  /** 
   * Newest version
   * List all Version  #### Request details Method: `GET`  URL: `api/v2/content/terms/{slugOrId}/versions/newest`  #### Headers `X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_  `X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_  #### Response codes(s) `200` OK  `404` Entity not found  `500` Internal server error _Please read response message_
   * The endpoint is owned by NStack v2 service owner
   * @param nMeta  (required)
   */
  @Headers(
    "X-Operation-Id: Newestversion",
    "Content-Type: application/json"
  )
  @GET("api/v2/content/terms/some-terms-1/versions/newest")
  fun newestversion(
    @retrofit2.http.Header("N-Meta") nMeta: String
  ): Completable

  /** 
   * Show version
   * List all Version  #### Request details Method: `GET`  URL: `api/v2/content/terms/versions/{id}`  #### Headers `X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_  `X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_  `Accept-Language` (string) **optional** _Set this to get best fit locale_  #### Query params `guid` (string) **optional** _If you want `has_viewed` to be calculated_  #### Response codes(s) `200` OK  `404` Entity not found  `500` Internal server error _Please read response message_
   * The endpoint is owned by NStack v2 service owner
   * @param guid  (required)
   * @param nMeta  (required)
   */
  @Headers(
    "X-Operation-Id: Showversion",
    "Content-Type: application/json"
  )
  @GET("api/v2/content/terms/versions/5")
  fun showversion(
    @retrofit2.http.Query("guid") guid: String,
    @retrofit2.http.Header("N-Meta") nMeta: String
  ): Completable

  /** 
   * Store View
   * Create a new View #### Request details Method: `POST`  URL: `/api/v2/content/terms/versions/{id}/views`  #### Headers `X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_  `X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_  #### Post params `term_version_id` (int) **required** _ID of Terms Version_  `guid` (string) **required** _GUID_  `identifier` (string) **required**  `locale` (string) **required**  #### Response codes(s) `200` OK  `412` Precondition failed _Please read response message_  `500` Internal server error _Please read response message_
   * The endpoint is owned by NStack v2 service owner
   * @param nMeta  (required)
   * @param termVersionId  (required)
   * @param guid  (required)
   * @param identifier  (required)
   * @param locale  (required)
   */
  @retrofit2.http.FormUrlEncoded
  @Headers(
    "X-Operation-Id: StoreView"
  )
  @POST("api/v2/content/terms/versions/views")
  fun storeView(
    @retrofit2.http.Header("N-Meta") nMeta: String,
    @retrofit2.http.Field("term_version_id") termVersionId: Int,
    @retrofit2.http.Field("guid") guid: String,
    @retrofit2.http.Field("identifier") identifier: String,
    @retrofit2.http.Field("locale") locale: String
  ): Completable

}
