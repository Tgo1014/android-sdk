/**
 * NOTE: This class is auto generated by the Swagger Gradle Codegen for the following API: API
 *
 * More info on this tool is available on https://github.com/Yelp/swagger-gradle-codegen
 */

package dk.nodes.nstack.kotlin.codegen.models

import com.squareup.moshi.Json

/**
 * 
 * @property titleProfile 
 * @property posts 
 * @property followers 
 * @property following 
 * @property noPhotos 
 * @property doesNotExist 
 * @property follow 
 * @property isFollowing 
 * @property onlyMyTattoos 
 * @property thisUserDoesntExist 
 * @property myTattoos 
 * @property someonesActivity 
 * @property report 
 * @property reportMessage 
 * @property reportSuccess 
 * @property reportTitle 
 * @property userAlreadyReportedTitle 
 * @property userNotFoundMessage 
 * @property tattoosOnMyBody 
 * @property unfollowUser 
 * @property unfollowUserMessage 
 * @property unfollowUnfollowButton 
 * @property unfollowCancelButton 
 * @property uploadedByMe 
 * @property myCollection 
 * @property bio 
 * @property tabMyCollection 
 * @property tabBoards 
 * @property tabUploads 
 * @property noBoards 
 * @property emptyBoards 
 * @property emptyBoardsSubtitle 
 * @property noBoardsSubtitle 
 * @property noMyCollection 
 * @property noMyCollectionSubtitle 
 * @property addTattoos 
 * @property emptyMyCollection 
 * @property emptyMyCollectionSubtitle 
 * @property noUploads 
 * @property noUploadsSubtitle 
 * @property emptyUploads 
 * @property emptyUploadsSubtitle 
 * @property uploadIdeas 
 */
data class User (
        @Json(name = "titleProfile") @field:Json(name = "titleProfile") var titleProfile: String,
        @Json(name = "posts") @field:Json(name = "posts") var posts: String,
        @Json(name = "followers") @field:Json(name = "followers") var followers: String,
        @Json(name = "following") @field:Json(name = "following") var following: String,
        @Json(name = "noPhotos") @field:Json(name = "noPhotos") var noPhotos: String,
        @Json(name = "doesNotExist") @field:Json(name = "doesNotExist") var doesNotExist: String,
        @Json(name = "follow") @field:Json(name = "follow") var follow: String,
        @Json(name = "isFollowing") @field:Json(name = "isFollowing") var isFollowing: String,
        @Json(name = "onlyMyTattoos") @field:Json(name = "onlyMyTattoos") var onlyMyTattoos: String,
        @Json(name = "thisUserDoesntExist") @field:Json(name = "thisUserDoesntExist") var thisUserDoesntExist: String,
        @Json(name = "myTattoos") @field:Json(name = "myTattoos") var myTattoos: String,
        @Json(name = "someonesActivity") @field:Json(name = "someonesActivity") var someonesActivity: String,
        @Json(name = "report") @field:Json(name = "report") var report: String,
        @Json(name = "reportMessage") @field:Json(name = "reportMessage") var reportMessage: String,
        @Json(name = "reportSuccess") @field:Json(name = "reportSuccess") var reportSuccess: String,
        @Json(name = "reportTitle") @field:Json(name = "reportTitle") var reportTitle: String,
        @Json(name = "userAlreadyReportedTitle") @field:Json(name = "userAlreadyReportedTitle") var userAlreadyReportedTitle: String,
        @Json(name = "userNotFoundMessage") @field:Json(name = "userNotFoundMessage") var userNotFoundMessage: String,
        @Json(name = "tattoosOnMyBody") @field:Json(name = "tattoosOnMyBody") var tattoosOnMyBody: String,
        @Json(name = "unfollowUser") @field:Json(name = "unfollowUser") var unfollowUser: String,
        @Json(name = "unfollowUserMessage") @field:Json(name = "unfollowUserMessage") var unfollowUserMessage: String,
        @Json(name = "unfollowUnfollowButton") @field:Json(name = "unfollowUnfollowButton") var unfollowUnfollowButton: String,
        @Json(name = "unfollowCancelButton") @field:Json(name = "unfollowCancelButton") var unfollowCancelButton: String,
        @Json(name = "uploadedByMe") @field:Json(name = "uploadedByMe") var uploadedByMe: String,
        @Json(name = "myCollection") @field:Json(name = "myCollection") var myCollection: String,
        @Json(name = "bio") @field:Json(name = "bio") var bio: String,
        @Json(name = "tabMyCollection") @field:Json(name = "tabMyCollection") var tabMyCollection: String,
        @Json(name = "tabBoards") @field:Json(name = "tabBoards") var tabBoards: String,
        @Json(name = "tabUploads") @field:Json(name = "tabUploads") var tabUploads: String,
        @Json(name = "noBoards") @field:Json(name = "noBoards") var noBoards: String,
        @Json(name = "emptyBoards") @field:Json(name = "emptyBoards") var emptyBoards: String,
        @Json(name = "emptyBoardsSubtitle") @field:Json(name = "emptyBoardsSubtitle") var emptyBoardsSubtitle: String,
        @Json(name = "noBoardsSubtitle") @field:Json(name = "noBoardsSubtitle") var noBoardsSubtitle: String,
        @Json(name = "noMyCollection") @field:Json(name = "noMyCollection") var noMyCollection: String,
        @Json(name = "noMyCollectionSubtitle") @field:Json(name = "noMyCollectionSubtitle") var noMyCollectionSubtitle: String,
        @Json(name = "addTattoos") @field:Json(name = "addTattoos") var addTattoos: String,
        @Json(name = "emptyMyCollection") @field:Json(name = "emptyMyCollection") var emptyMyCollection: String,
        @Json(name = "emptyMyCollectionSubtitle") @field:Json(name = "emptyMyCollectionSubtitle") var emptyMyCollectionSubtitle: String,
        @Json(name = "noUploads") @field:Json(name = "noUploads") var noUploads: String,
        @Json(name = "noUploadsSubtitle") @field:Json(name = "noUploadsSubtitle") var noUploadsSubtitle: String,
        @Json(name = "emptyUploads") @field:Json(name = "emptyUploads") var emptyUploads: String,
        @Json(name = "emptyUploadsSubtitle") @field:Json(name = "emptyUploadsSubtitle") var emptyUploadsSubtitle: String,
        @Json(name = "uploadIdeas") @field:Json(name = "uploadIdeas") var uploadIdeas: String
)

