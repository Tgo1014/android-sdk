/**
 * NOTE: This class is auto generated by the Swagger Gradle Codegen for the following API: API
 *
 * More info on this tool is available on https://github.com/Yelp/swagger-gradle-codegen
 */

package dk.nodes.nstack.kotlin.codegen.apis

import okhttp3.RequestBody

import dk.nodes.nstack.kotlin.codegen.models.PushLogsRequest
import dk.nodes.nstack.kotlin.codegen.tools.CSV
import io.reactivex.Completable
import retrofit2.http.Headers
import retrofit2.http.POST

@JvmSuppressWildcards
interface UGCApi {
  /** 
   * Feedback
   * #### Request details  Method:    `POST`  URL:    `/api/v2/ugc/feedbacks`  #### Headers   `X-Application-Id`  `X-Rest-Api-Key`  #### Response codes(s)  `200` OK  `412` Validation failed  #### Post params  `type` (string: feedback, bug) **optional, default is feedback**  `platform` (string: web, ios, android, unknown) **optional, default is unknown**  `os` (string) **optional**  `app_version` (string) **optional**  `device` (string) **optional**  `name` (string) **optional**  `email` (string) **optional**  `message` (string) **optional**  `image` (jpg,jpeg,png) **optional**  `meta` (array/dict, (full flexiable)) **optional**  `breadcrumbs` (array, {event (required): string, timestamp (required): Y-m-d H:i:s, meta (optional): array) **optional**
   * The endpoint is owned by NStack v2 service owner
   * @param breadcrumbs0Meta  (required)
   * @param os  (required)
   * @param device  (required)
   * @param appVersion  (required)
   * @param name  (required)
   * @param email  (required)
   * @param message  (required)
   * @param image  (required)
   * @param type  (required)
   * @param platform  (required)
   * @param metaKey  (required)
   * @param breadcrumbs0Event  (required)
   * @param breadcrumbs0Timestamp  (required)
   */
  @retrofit2.http.FormUrlEncoded
  @Headers(
    "X-Operation-Id: Feedback"
  )
  @POST("api/v2/ugc/feedbacks")
  fun feedback(
    @retrofit2.http.Field("breadcrumbs[0][meta]") breadcrumbs0Meta: String,
    @retrofit2.http.Field("os") os: String,
    @retrofit2.http.Field("device") device: String,
    @retrofit2.http.Field("app_version") appVersion: String,
    @retrofit2.http.Field("name") name: String,
    @retrofit2.http.Field("email") email: String,
    @retrofit2.http.Field("message") message: String,
    @retrofit2.http.Field("image") image: String,
    @retrofit2.http.Field("type") type: String,
    @retrofit2.http.Field("platform") platform: String,
    @retrofit2.http.Field("meta[key]") metaKey: String,
    @retrofit2.http.Field("breadcrumbs[0][event]") breadcrumbs0Event: String,
    @retrofit2.http.Field("breadcrumbs[0][timestamp]") breadcrumbs0Timestamp: String
  ): Completable

  /** 
   * Feedback
   * #### Request details  Method:    `POST`  URL:    `/api/v1/ugc/feedbacks`  #### Headers   `X-Application-Id`  `X-Rest-Api-Key`  #### Response codes(s)  `200` OK  `412` Validation failed  #### Post params  `os` (string) **optional**  `app_version` (string) **optional**  `device` (string) **optional**  `name` (string) **optional**  `email` (string) **optional**  `message` (string) **optional**  `image` (jpg,jpeg,png) **optional**
   * The endpoint is owned by NStack v2 service owner
   * @param os  (required)
   * @param device  (required)
   * @param appVersion  (required)
   * @param name  (required)
   * @param email  (required)
   * @param message  (required)
   * @param image  (required)
   */
  @retrofit2.http.FormUrlEncoded
  @Headers(
    "X-Operation-Id: PostFeedback"
  )
  @POST("api/v1/ugc/feedbacks")
  fun postFeedback(
    @retrofit2.http.Field("os") os: String,
    @retrofit2.http.Field("device") device: String,
    @retrofit2.http.Field("app_version") appVersion: String,
    @retrofit2.http.Field("name") name: String,
    @retrofit2.http.Field("email") email: String,
    @retrofit2.http.Field("message") message: String,
    @retrofit2.http.Field("image") image: String
  ): Completable

  /** 
   * Push Logs
   * #### Request details Method:    `POST`  URL:    `/api/v2/ugc/push-logs`  #### Headers  `X-Application-Id`  `X-Rest-Api-Key`  #### Response codes(s) `201` Created  `412` Validation failed  #### Post params `provider` (string) **required** (fx fcm, urban-airship)  `key` (string) **required** (App key in fcm / ua)  `type` (string) **required** (fx standard, freind-request, taxi-arrived etc)  `succeeded` (bool) **required** (Did push get sent?)  `request` (json) **optional** (Insert everything passed to provider)  `response` (json) **optional** (Insert everything received from provider)  `user_id` (int/string) **optional** (User id)  `relation_type` (string) **optional** (Fx Booking, Company etc)  `relation_id` (int) **optional** (Fx Id of Booking, id of Company etc)
   * The endpoint is owned by NStack v2 service owner
   * @param body  (required)
   */
  @Headers(
    "X-Operation-Id: PushLogs",
    "Content-Type: application/x-www-form-urlencoded"
  )
  @POST("api/v2/ugc/push-logs")
  fun pushLogs(
    @retrofit2.http.Body  body: PushLogsRequest
  ): Completable

  /** 
   * Push Logs1
   * #### Request details Method:    `POST`  URL:    `/api/v1/ugc/push-logs`  #### Headers  `X-Application-Id`  `X-Rest-Api-Key`  #### Response codes(s) `201` Created  `412` Validation failed  #### Post params `provider` (string) **required** (fx fcm, urban-airship)  `key` (string) **required** (App key in fcm / ua)  `type` (string) **required** (fx standard, freind-request, taxi-arrived etc)  `succeeded` (bool) **required** (Did push get sent?)  `request` (json) **optional** (Insert everything passed to provider)  `response` (json) **optional** (Insert everything received from provider)  `user_id` (int/string) **optional** (User id)  `relation_type` (string) **optional** (Fx Booking, Company etc)  `relation_id` (int) **optional** (Fx Id of Booking, id of Company etc)
   * The endpoint is owned by NStack v2 service owner
   * @param body  (required)
   */
  @Headers(
    "X-Operation-Id: PushLogs1",
    "Content-Type: application/x-www-form-urlencoded"
  )
  @POST("api/v1/ugc/push-logs")
  fun pushLogs1(
    @retrofit2.http.Body  body: PushLogsRequest
  ): Completable

  /** 
   * Result
   * #### Request details Method:    `POST`  URL:    `/api/v2/ugc/feedbacks`  #### Headers  `X-Application-Id`  `X-Rest-Api-Key`  #### Response codes(s) `200` OK  `412` Validation failed  #### Post params `key` (string) **required**  `user` (string) **required**  `answer` (string) **required**  `points` (int) **required**  `tag` (string) **required**
   * The endpoint is owned by NStack v2 service owner
   * @param key  (required)
   * @param user  (required)
   * @param answer  (required)
   * @param points  (required)
   * @param tag  (required)
   */
  @retrofit2.http.FormUrlEncoded
  @Headers(
    "X-Operation-Id: Result"
  )
  @POST("api/v2/ugc/results")
  fun result(
    @retrofit2.http.Field("key") key: String,
    @retrofit2.http.Field("user") user: String,
    @retrofit2.http.Field("answer") answer: List<Int>,
    @retrofit2.http.Field("points") points: Int,
    @retrofit2.http.Field("tag") tag: String
  ): Completable

  /** 
   * Result1
   * #### Request details Method:    `POST`  URL:    `/api/v1/ugc/feedbacks`  #### Headers  `X-Application-Id`  `X-Rest-Api-Key`  #### Response codes(s) `200` OK  `412` Validation failed  #### Post params `key` (string) **required**  `user` (string) **required**  `answer` (string) **required**  `points` (int) **required**  `tag` (string) **required** 
   * The endpoint is owned by NStack v2 service owner
   * @param key  (required)
   * @param user  (required)
   * @param answer  (required)
   * @param points  (required)
   * @param tag  (required)
   */
  @retrofit2.http.FormUrlEncoded
  @Headers(
    "X-Operation-Id: Result1"
  )
  @POST("api/v1/ugc/results")
  fun result1(
    @retrofit2.http.Field("key") key: String,
    @retrofit2.http.Field("user") user: String,
    @retrofit2.http.Field("answer") answer: List<Int>,
    @retrofit2.http.Field("points") points: Int,
    @retrofit2.http.Field("tag") tag: String
  ): Completable

}
