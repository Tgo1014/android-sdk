/**
* API
* This is the public API for nstack.io  Setup an application and use Application-Id and Rest-Api-Key
*
* The version of the OpenAPI document: 1.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package dk.nodes.nstack.kotlin.codegen.model


import kotlinx.serialization.*
import kotlinx.serialization.internal.CommonEnumSerializer
/**
 * 
 * @param actions 
 * @param active 
 * @param add 
 * @param cancel 
 * @param confirmHeader 
 * @param create 
 * @param default 
 * @param deleteModel 
 * @param deleteSuccess 
 * @param edit 
 * @param editModel 
 * @param modelIsActive 
 * @param modelIsDeactive 
 * @param name 
 * @param noEntries 
 * @param pick 
 * @param saveSuccess 
 * @param slug 
 * @param update 
 */
@Serializable
data class Default1 (
    @SerialName(value = "actions") @Required val actions: kotlin.String,
    @SerialName(value = "active") @Required val active: kotlin.String,
    @SerialName(value = "add") @Required val add: kotlin.String,
    @SerialName(value = "cancel") @Required val cancel: kotlin.String,
    @SerialName(value = "confirmHeader") @Required val confirmHeader: kotlin.String,
    @SerialName(value = "create") @Required val create: kotlin.String,
    @SerialName(value = "default") @Required val default: kotlin.String,
    @SerialName(value = "deleteModel") @Required val deleteModel: kotlin.String,
    @SerialName(value = "deleteSuccess") @Required val deleteSuccess: kotlin.String,
    @SerialName(value = "edit") @Required val edit: kotlin.String,
    @SerialName(value = "editModel") @Required val editModel: kotlin.String,
    @SerialName(value = "modelIsActive") @Required val modelIsActive: kotlin.String,
    @SerialName(value = "modelIsDeactive") @Required val modelIsDeactive: kotlin.String,
    @SerialName(value = "name") @Required val name: kotlin.String,
    @SerialName(value = "noEntries") @Required val noEntries: kotlin.String,
    @SerialName(value = "pick") @Required val pick: kotlin.String,
    @SerialName(value = "saveSuccess") @Required val saveSuccess: kotlin.String,
    @SerialName(value = "slug") @Required val slug: kotlin.String,
    @SerialName(value = "update") @Required val update: kotlin.String
) 



