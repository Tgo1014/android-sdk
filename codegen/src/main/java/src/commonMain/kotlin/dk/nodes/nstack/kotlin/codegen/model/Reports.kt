/**
* API
* This is the public API for nstack.io  Setup an application and use Application-Id and Rest-Api-Key
*
* The version of the OpenAPI document: 1.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package dk.nodes.nstack.kotlin.codegen.model


import kotlinx.serialization.*
import kotlinx.serialization.internal.CommonEnumSerializer
/**
 * 
 * @param inappropriateusers 
 * @param shouldnotbelistedusers 
 * @param inappropriateshops 
 * @param isnotshopshops 
 * @param shouldnotbelistedshops 
 * @param othershops 
 * @param inappropriateposts 
 * @param otherposts 
 * @param otherusers 
 * @param inappropriatecomments 
 * @param falseinformationcomments 
 * @param othercomments 
 * @param falseinformationreviews 
 * @param inappropriatereviews 
 * @param otherreviews 
 * @param yourReason 
 * @param report 
 * @param cancel 
 * @param shopAlreadyReported 
 * @param userAlreadyReported 
 * @param postAlreadyReported 
 * @param reviewAlreadyReported 
 * @param responseAlreadyReported 
 * @param shopReported 
 * @param userReported 
 * @param postReported 
 * @param reviewReported 
 * @param responseReported 
 */
@Serializable
data class Reports (
    @SerialName(value = "inappropriateusers") @Required val inappropriateusers: kotlin.String,
    @SerialName(value = "shouldnotbelistedusers") @Required val shouldnotbelistedusers: kotlin.String,
    @SerialName(value = "inappropriateshops") @Required val inappropriateshops: kotlin.String,
    @SerialName(value = "isnotshopshops") @Required val isnotshopshops: kotlin.String,
    @SerialName(value = "shouldnotbelistedshops") @Required val shouldnotbelistedshops: kotlin.String,
    @SerialName(value = "othershops") @Required val othershops: kotlin.String,
    @SerialName(value = "inappropriateposts") @Required val inappropriateposts: kotlin.String,
    @SerialName(value = "otherposts") @Required val otherposts: kotlin.String,
    @SerialName(value = "otherusers") @Required val otherusers: kotlin.String,
    @SerialName(value = "inappropriatecomments") @Required val inappropriatecomments: kotlin.String,
    @SerialName(value = "falseinformationcomments") @Required val falseinformationcomments: kotlin.String,
    @SerialName(value = "othercomments") @Required val othercomments: kotlin.String,
    @SerialName(value = "falseinformationreviews") @Required val falseinformationreviews: kotlin.String,
    @SerialName(value = "inappropriatereviews") @Required val inappropriatereviews: kotlin.String,
    @SerialName(value = "otherreviews") @Required val otherreviews: kotlin.String,
    @SerialName(value = "yourReason") @Required val yourReason: kotlin.String,
    @SerialName(value = "report") @Required val report: kotlin.String,
    @SerialName(value = "cancel") @Required val cancel: kotlin.String,
    @SerialName(value = "shopAlreadyReported") @Required val shopAlreadyReported: kotlin.String,
    @SerialName(value = "userAlreadyReported") @Required val userAlreadyReported: kotlin.String,
    @SerialName(value = "postAlreadyReported") @Required val postAlreadyReported: kotlin.String,
    @SerialName(value = "reviewAlreadyReported") @Required val reviewAlreadyReported: kotlin.String,
    @SerialName(value = "responseAlreadyReported") @Required val responseAlreadyReported: kotlin.String,
    @SerialName(value = "shopReported") @Required val shopReported: kotlin.String,
    @SerialName(value = "userReported") @Required val userReported: kotlin.String,
    @SerialName(value = "postReported") @Required val postReported: kotlin.String,
    @SerialName(value = "reviewReported") @Required val reviewReported: kotlin.String,
    @SerialName(value = "responseReported") @Required val responseReported: kotlin.String
) 



