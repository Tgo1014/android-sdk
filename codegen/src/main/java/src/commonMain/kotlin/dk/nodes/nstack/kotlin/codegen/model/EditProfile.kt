/**
* API
* This is the public API for nstack.io  Setup an application and use Application-Id and Rest-Api-Key
*
* The version of the OpenAPI document: 1.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package dk.nodes.nstack.kotlin.codegen.model


import kotlinx.serialization.*
import kotlinx.serialization.internal.CommonEnumSerializer
/**
 * 
 * @param username 
 * @param email 
 * @param name 
 * @param biography 
 * @param photoChange 
 * @param save 
 * @param changePassword 
 * @param gender 
 * @param genderMale 
 * @param genderFemale 
 * @param birthday 
 * @param title 
 * @param photoTake 
 * @param photoSelect 
 * @param photoRemove 
 * @param namePlaceholder 
 * @param biographyPlaceholder 
 * @param choose 
 * @param genderNotSpecified 
 * @param photoAdd 
 * @param imagePlaceholder 
 * @param genderAlertMessage 
 * @param required 
 * @param editSuccess 
 * @param photoRemovePlain 
 * @param removeImageTitle 
 * @param removeImageMessage 
 * @param removeImagePositiveBtn 
 * @param countryList 
 * @param changeProfileImage 
 * @param removeImageNegativeBtn 
 */
@Serializable
data class EditProfile (
    @SerialName(value = "username") @Required val username: kotlin.String,
    @SerialName(value = "email") @Required val email: kotlin.String,
    @SerialName(value = "name") @Required val name: kotlin.String,
    @SerialName(value = "biography") @Required val biography: kotlin.String,
    @SerialName(value = "photoChange") @Required val photoChange: kotlin.String,
    @SerialName(value = "save") @Required val save: kotlin.String,
    @SerialName(value = "changePassword") @Required val changePassword: kotlin.String,
    @SerialName(value = "gender") @Required val gender: kotlin.String,
    @SerialName(value = "genderMale") @Required val genderMale: kotlin.String,
    @SerialName(value = "genderFemale") @Required val genderFemale: kotlin.String,
    @SerialName(value = "birthday") @Required val birthday: kotlin.String,
    @SerialName(value = "title") @Required val title: kotlin.String,
    @SerialName(value = "photoTake") @Required val photoTake: kotlin.String,
    @SerialName(value = "photoSelect") @Required val photoSelect: kotlin.String,
    @SerialName(value = "photoRemove") @Required val photoRemove: kotlin.String,
    @SerialName(value = "namePlaceholder") @Required val namePlaceholder: kotlin.String,
    @SerialName(value = "biographyPlaceholder") @Required val biographyPlaceholder: kotlin.String,
    @SerialName(value = "choose") @Required val choose: kotlin.String,
    @SerialName(value = "genderNotSpecified") @Required val genderNotSpecified: kotlin.String,
    @SerialName(value = "photoAdd") @Required val photoAdd: kotlin.String,
    @SerialName(value = "imagePlaceholder") @Required val imagePlaceholder: kotlin.String,
    @SerialName(value = "genderAlertMessage") @Required val genderAlertMessage: kotlin.String,
    @SerialName(value = "required") @Required val required: kotlin.String,
    @SerialName(value = "editSuccess") @Required val editSuccess: kotlin.String,
    @SerialName(value = "photoRemovePlain") @Required val photoRemovePlain: kotlin.String,
    @SerialName(value = "removeImageTitle") @Required val removeImageTitle: kotlin.String,
    @SerialName(value = "removeImageMessage") @Required val removeImageMessage: kotlin.String,
    @SerialName(value = "removeImagePositiveBtn") @Required val removeImagePositiveBtn: kotlin.String,
    @SerialName(value = "countryList") @Required val countryList: kotlin.String,
    @SerialName(value = "changeProfileImage") @Required val changeProfileImage: kotlin.String,
    @SerialName(value = "removeImageNegativeBtn") @Required val removeImageNegativeBtn: kotlin.String
) 



