/**
* API
* This is the public API for nstack.io  Setup an application and use Application-Id and Rest-Api-Key
*
* The version of the OpenAPI document: 1.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package dk.nodes.nstack.kotlin.codegen.model


import kotlinx.serialization.*
import kotlinx.serialization.internal.CommonEnumSerializer
/**
 * 
 * @param skipButton 
 * @param facebookButton 
 * @param twitterButton 
 * @param emailButton 
 * @param twitterErrorAlert 
 * @param facebookErrorAlert 
 * @param cantFindFacebookAccount 
 * @param cantFindTwitterAccount 
 * @param googleButton 
 * @param googleErrorAlert 
 * @param cantFindGoogleAccount 
 * @param bySigningUp 
 * @param headerText 
 * @param termsAndPrivacy 
 * @param termsOfConditions 
 * @param and 
 * @param privacy 
 * @param betaCodeErrorAlert 
 * @param connecting 
 * @param newSkipButton 
 * @param worldsLargestTattooCommunity 
 * @param google 
 * @param facebook 
 * @param twitter 
 * @param loginOrSignUpWithEmail 
 * @param terms 
 * @param youAgreeBySigningUp 
 * @param privacyPolicy 
 * @param continueWith 
 * @param continueWithEmail 
 */
@Serializable
data class Welcome (
    @SerialName(value = "skipButton") @Required val skipButton: kotlin.String,
    @SerialName(value = "facebookButton") @Required val facebookButton: kotlin.String,
    @SerialName(value = "twitterButton") @Required val twitterButton: kotlin.String,
    @SerialName(value = "emailButton") @Required val emailButton: kotlin.String,
    @SerialName(value = "twitterErrorAlert") @Required val twitterErrorAlert: kotlin.String,
    @SerialName(value = "facebookErrorAlert") @Required val facebookErrorAlert: kotlin.String,
    @SerialName(value = "cantFindFacebookAccount") @Required val cantFindFacebookAccount: kotlin.String,
    @SerialName(value = "cantFindTwitterAccount") @Required val cantFindTwitterAccount: kotlin.String,
    @SerialName(value = "googleButton") @Required val googleButton: kotlin.String,
    @SerialName(value = "googleErrorAlert") @Required val googleErrorAlert: kotlin.String,
    @SerialName(value = "cantFindGoogleAccount") @Required val cantFindGoogleAccount: kotlin.String,
    @SerialName(value = "bySigningUp") @Required val bySigningUp: kotlin.String,
    @SerialName(value = "headerText") @Required val headerText: kotlin.String,
    @SerialName(value = "termsAndPrivacy") @Required val termsAndPrivacy: kotlin.String,
    @SerialName(value = "termsOfConditions") @Required val termsOfConditions: kotlin.String,
    @SerialName(value = "and") @Required val and: kotlin.String,
    @SerialName(value = "privacy") @Required val privacy: kotlin.String,
    @SerialName(value = "betaCodeErrorAlert") @Required val betaCodeErrorAlert: kotlin.String,
    @SerialName(value = "connecting") @Required val connecting: kotlin.String,
    @SerialName(value = "newSkipButton") @Required val newSkipButton: kotlin.String,
    @SerialName(value = "worldsLargestTattooCommunity") @Required val worldsLargestTattooCommunity: kotlin.String,
    @SerialName(value = "google") @Required val google: kotlin.String,
    @SerialName(value = "facebook") @Required val facebook: kotlin.String,
    @SerialName(value = "twitter") @Required val twitter: kotlin.String,
    @SerialName(value = "loginOrSignUpWithEmail") @Required val loginOrSignUpWithEmail: kotlin.String,
    @SerialName(value = "terms") @Required val terms: kotlin.String,
    @SerialName(value = "youAgreeBySigningUp") @Required val youAgreeBySigningUp: kotlin.String,
    @SerialName(value = "privacyPolicy") @Required val privacyPolicy: kotlin.String,
    @SerialName(value = "continueWith") @Required val continueWith: kotlin.String,
    @SerialName(value = "continueWithEmail") @Required val continueWithEmail: kotlin.String
) 



