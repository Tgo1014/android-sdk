/**
* API
* This is the public API for nstack.io  Setup an application and use Application-Id and Rest-Api-Key
*
* The version of the OpenAPI document: 1.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package dk.nodes.nstack.kotlin.codegen.model


import kotlinx.serialization.*
import kotlinx.serialization.internal.CommonEnumSerializer
/**
 * 
 * @param postSingular 
 * @param postPlural 
 * @param noPosts 
 * @param noUsers 
 * @param tags 
 * @param people 
 * @param categoryPopular 
 * @param categoryImages 
 * @param categoryArtists 
 * @param categoryShops 
 * @param categoryArticles 
 * @param categoryPeople 
 * @param topResult 
 * @param noResultsFor 
 * @param hereAreSomeSuggestions 
 * @param seeArticlesWithinTheseCategories 
 * @param seeTopArtistsWithTheseSkills 
 * @param weWereUnableToFindThisShopBut 
 * @param ourTeamWouldLoveToAddTheShopForYou 
 * @param yesPlease 
 * @param related 
 * @param filterByBodyPart 
 * @param letUsFindTheBestShops 
 * @param weNeedGPS 
 * @param giveAccess 
 * @param filterByStyle 
 * @param seeTopArtists 
 * @param noResults 
 * @param searchArticles 
 * @param sortBy 
 * @param filterByCategory 
 * @param recent 
 * @param popular 
 * @param searchArtists 
 * @param searchPeople 
 * @param searchImages 
 * @param searchTattoodo 
 * @param searchShops 
 * @param addShop 
 * @param shopName 
 * @param country 
 * @param city 
 * @param done 
 * @param youRock 
 * @param teamValidation 
 * @param backToDiscover 
 * @param kmAway 
 * @param doYouKnowThisShop 
 * @param letUsKnow 
 * @param book 
 * @param viewAll 
 * @param distanceKM 
 * @param distanceM 
 */
@Serializable
data class Search (
    @SerialName(value = "postSingular") @Required val postSingular: kotlin.String,
    @SerialName(value = "postPlural") @Required val postPlural: kotlin.String,
    @SerialName(value = "noPosts") @Required val noPosts: kotlin.String,
    @SerialName(value = "noUsers") @Required val noUsers: kotlin.String,
    @SerialName(value = "tags") @Required val tags: kotlin.String,
    @SerialName(value = "people") @Required val people: kotlin.String,
    @SerialName(value = "categoryPopular") @Required val categoryPopular: kotlin.String,
    @SerialName(value = "categoryImages") @Required val categoryImages: kotlin.String,
    @SerialName(value = "categoryArtists") @Required val categoryArtists: kotlin.String,
    @SerialName(value = "categoryShops") @Required val categoryShops: kotlin.String,
    @SerialName(value = "categoryArticles") @Required val categoryArticles: kotlin.String,
    @SerialName(value = "categoryPeople") @Required val categoryPeople: kotlin.String,
    @SerialName(value = "topResult") @Required val topResult: kotlin.String,
    @SerialName(value = "noResultsFor") @Required val noResultsFor: kotlin.String,
    @SerialName(value = "hereAreSomeSuggestions") @Required val hereAreSomeSuggestions: kotlin.String,
    @SerialName(value = "seeArticlesWithinTheseCategories") @Required val seeArticlesWithinTheseCategories: kotlin.String,
    @SerialName(value = "seeTopArtistsWithTheseSkills") @Required val seeTopArtistsWithTheseSkills: kotlin.String,
    @SerialName(value = "weWereUnableToFindThisShopBut") @Required val weWereUnableToFindThisShopBut: kotlin.String,
    @SerialName(value = "ourTeamWouldLoveToAddTheShopForYou") @Required val ourTeamWouldLoveToAddTheShopForYou: kotlin.String,
    @SerialName(value = "yesPlease") @Required val yesPlease: kotlin.String,
    @SerialName(value = "related") @Required val related: kotlin.String,
    @SerialName(value = "filterByBodyPart") @Required val filterByBodyPart: kotlin.String,
    @SerialName(value = "letUsFindTheBestShops") @Required val letUsFindTheBestShops: kotlin.String,
    @SerialName(value = "weNeedGPS") @Required val weNeedGPS: kotlin.String,
    @SerialName(value = "giveAccess") @Required val giveAccess: kotlin.String,
    @SerialName(value = "filterByStyle") @Required val filterByStyle: kotlin.String,
    @SerialName(value = "seeTopArtists") @Required val seeTopArtists: kotlin.String,
    @SerialName(value = "noResults") @Required val noResults: kotlin.String,
    @SerialName(value = "searchArticles") @Required val searchArticles: kotlin.String,
    @SerialName(value = "sortBy") @Required val sortBy: kotlin.String,
    @SerialName(value = "filterByCategory") @Required val filterByCategory: kotlin.String,
    @SerialName(value = "recent") @Required val recent: kotlin.String,
    @SerialName(value = "popular") @Required val popular: kotlin.String,
    @SerialName(value = "searchArtists") @Required val searchArtists: kotlin.String,
    @SerialName(value = "searchPeople") @Required val searchPeople: kotlin.String,
    @SerialName(value = "searchImages") @Required val searchImages: kotlin.String,
    @SerialName(value = "searchTattoodo") @Required val searchTattoodo: kotlin.String,
    @SerialName(value = "searchShops") @Required val searchShops: kotlin.String,
    @SerialName(value = "addShop") @Required val addShop: kotlin.String,
    @SerialName(value = "shopName") @Required val shopName: kotlin.String,
    @SerialName(value = "country") @Required val country: kotlin.String,
    @SerialName(value = "city") @Required val city: kotlin.String,
    @SerialName(value = "done") @Required val done: kotlin.String,
    @SerialName(value = "youRock") @Required val youRock: kotlin.String,
    @SerialName(value = "teamValidation") @Required val teamValidation: kotlin.String,
    @SerialName(value = "backToDiscover") @Required val backToDiscover: kotlin.String,
    @SerialName(value = "kmAway") @Required val kmAway: kotlin.String,
    @SerialName(value = "doYouKnowThisShop") @Required val doYouKnowThisShop: kotlin.String,
    @SerialName(value = "letUsKnow") @Required val letUsKnow: kotlin.String,
    @SerialName(value = "book") @Required val book: kotlin.String,
    @SerialName(value = "viewAll") @Required val viewAll: kotlin.String,
    @SerialName(value = "distanceKM") @Required val distanceKM: kotlin.String,
    @SerialName(value = "distanceM") @Required val distanceM: kotlin.String
) 



