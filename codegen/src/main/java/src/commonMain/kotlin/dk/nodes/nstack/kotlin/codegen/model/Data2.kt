/**
* API
* This is the public API for nstack.io  Setup an application and use Application-Id and Rest-Api-Key
*
* The version of the OpenAPI document: 1.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package dk.nodes.nstack.kotlin.codegen.model

import dk.nodes.nstack.kotlin.codegen.model.AccessCode
import dk.nodes.nstack.kotlin.codegen.model.Activity
import dk.nodes.nstack.kotlin.codegen.model.Article
import dk.nodes.nstack.kotlin.codegen.model.Artist
import dk.nodes.nstack.kotlin.codegen.model.BodyPart
import dk.nodes.nstack.kotlin.codegen.model.Booking
import dk.nodes.nstack.kotlin.codegen.model.ChangePassword
import dk.nodes.nstack.kotlin.codegen.model.Comments
import dk.nodes.nstack.kotlin.codegen.model.Communication
import dk.nodes.nstack.kotlin.codegen.model.CreateNewPost
import dk.nodes.nstack.kotlin.codegen.model.CreateNewPostDescription
import dk.nodes.nstack.kotlin.codegen.model.CreateUser1
import dk.nodes.nstack.kotlin.codegen.model.CreateUser2
import dk.nodes.nstack.kotlin.codegen.model.CreateUser3
import dk.nodes.nstack.kotlin.codegen.model.Default
import dk.nodes.nstack.kotlin.codegen.model.Discover
import dk.nodes.nstack.kotlin.codegen.model.EditImage
import dk.nodes.nstack.kotlin.codegen.model.EditProfile
import dk.nodes.nstack.kotlin.codegen.model.EndOfFeed
import dk.nodes.nstack.kotlin.codegen.model.Error
import dk.nodes.nstack.kotlin.codegen.model.Errors
import dk.nodes.nstack.kotlin.codegen.model.Feed
import dk.nodes.nstack.kotlin.codegen.model.Filters
import dk.nodes.nstack.kotlin.codegen.model.ForgotPassword
import dk.nodes.nstack.kotlin.codegen.model.Introtour
import dk.nodes.nstack.kotlin.codegen.model.Landing
import dk.nodes.nstack.kotlin.codegen.model.Language1
import dk.nodes.nstack.kotlin.codegen.model.Login
import dk.nodes.nstack.kotlin.codegen.model.Meta1
import dk.nodes.nstack.kotlin.codegen.model.News
import dk.nodes.nstack.kotlin.codegen.model.People
import dk.nodes.nstack.kotlin.codegen.model.Pin
import dk.nodes.nstack.kotlin.codegen.model.Post
import dk.nodes.nstack.kotlin.codegen.model.PushNotifications
import dk.nodes.nstack.kotlin.codegen.model.RatingPrompt
import dk.nodes.nstack.kotlin.codegen.model.Reports
import dk.nodes.nstack.kotlin.codegen.model.Search
import dk.nodes.nstack.kotlin.codegen.model.Settings
import dk.nodes.nstack.kotlin.codegen.model.Shop
import dk.nodes.nstack.kotlin.codegen.model.ShortcutMenu
import dk.nodes.nstack.kotlin.codegen.model.SignUp
import dk.nodes.nstack.kotlin.codegen.model.SuggestUsers
import dk.nodes.nstack.kotlin.codegen.model.Tattoos
import dk.nodes.nstack.kotlin.codegen.model.User
import dk.nodes.nstack.kotlin.codegen.model.UserList
import dk.nodes.nstack.kotlin.codegen.model.Welcome

import kotlinx.serialization.*
import kotlinx.serialization.internal.CommonEnumSerializer
/**
 * 
 * @param default 
 * @param settings 
 * @param welcome 
 * @param createUser1 
 * @param createUser2 
 * @param login 
 * @param forgotPassword 
 * @param language 
 * @param pushNotifications 
 * @param user 
 * @param news 
 * @param discover 
 * @param feed 
 * @param editProfile 
 * @param changePassword 
 * @param createNewPost 
 * @param suggestUsers 
 * @param editImage 
 * @param errors 
 * @param bodyPart 
 * @param search 
 * @param userList 
 * @param createNewPostDescription 
 * @param article 
 * @param comments 
 * @param activity 
 * @param accessCode 
 * @param filters 
 * @param introtour 
 * @param createUser3 
 * @param pin 
 * @param shortcutMenu 
 * @param landing 
 * @param signUp 
 * @param artist 
 * @param shop 
 * @param reports 
 * @param ratingPrompt 
 * @param tattoos 
 * @param communication 
 * @param error 
 * @param meta 
 * @param post 
 * @param people 
 * @param booking 
 * @param endOfFeed 
 */
@Serializable
data class Data2 (
    @SerialName(value = "default") @Required val default: Default,
    @SerialName(value = "settings") @Required val settings: Settings,
    @SerialName(value = "welcome") @Required val welcome: Welcome,
    @SerialName(value = "createUser1") @Required val createUser1: CreateUser1,
    @SerialName(value = "createUser2") @Required val createUser2: CreateUser2,
    @SerialName(value = "login") @Required val login: Login,
    @SerialName(value = "forgotPassword") @Required val forgotPassword: ForgotPassword,
    @SerialName(value = "language") @Required val language: Language1,
    @SerialName(value = "pushNotifications") @Required val pushNotifications: PushNotifications,
    @SerialName(value = "user") @Required val user: User,
    @SerialName(value = "news") @Required val news: News,
    @SerialName(value = "discover") @Required val discover: Discover,
    @SerialName(value = "feed") @Required val feed: Feed,
    @SerialName(value = "editProfile") @Required val editProfile: EditProfile,
    @SerialName(value = "changePassword") @Required val changePassword: ChangePassword,
    @SerialName(value = "createNewPost") @Required val createNewPost: CreateNewPost,
    @SerialName(value = "suggestUsers") @Required val suggestUsers: SuggestUsers,
    @SerialName(value = "editImage") @Required val editImage: EditImage,
    @SerialName(value = "errors") @Required val errors: Errors,
    @SerialName(value = "bodyPart") @Required val bodyPart: BodyPart,
    @SerialName(value = "search") @Required val search: Search,
    @SerialName(value = "userList") @Required val userList: UserList,
    @SerialName(value = "createNewPostDescription") @Required val createNewPostDescription: CreateNewPostDescription,
    @SerialName(value = "article") @Required val article: Article,
    @SerialName(value = "comments") @Required val comments: Comments,
    @SerialName(value = "activity") @Required val activity: Activity,
    @SerialName(value = "accessCode") @Required val accessCode: AccessCode,
    @SerialName(value = "filters") @Required val filters: Filters,
    @SerialName(value = "introtour") @Required val introtour: Introtour,
    @SerialName(value = "createUser3") @Required val createUser3: CreateUser3,
    @SerialName(value = "pin") @Required val pin: Pin,
    @SerialName(value = "shortcutMenu") @Required val shortcutMenu: ShortcutMenu,
    @SerialName(value = "landing") @Required val landing: Landing,
    @SerialName(value = "signUp") @Required val signUp: SignUp,
    @SerialName(value = "artist") @Required val artist: Artist,
    @SerialName(value = "shop") @Required val shop: Shop,
    @SerialName(value = "reports") @Required val reports: Reports,
    @SerialName(value = "ratingPrompt") @Required val ratingPrompt: RatingPrompt,
    @SerialName(value = "tattoos") @Required val tattoos: Tattoos,
    @SerialName(value = "communication") @Required val communication: Communication,
    @SerialName(value = "error") @Required val error: Error,
    @SerialName(value = "meta") @Required val meta: Meta1,
    @SerialName(value = "post") @Required val post: Post,
    @SerialName(value = "people") @Required val people: People,
    @SerialName(value = "booking") @Required val booking: Booking,
    @SerialName(value = "endOfFeed") @Required val endOfFeed: EndOfFeed
) 



