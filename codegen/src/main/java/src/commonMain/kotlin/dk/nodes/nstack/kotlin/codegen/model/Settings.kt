/**
* API
* This is the public API for nstack.io  Setup an application and use Application-Id and Rest-Api-Key
*
* The version of the OpenAPI document: 1.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package dk.nodes.nstack.kotlin.codegen.model


import kotlinx.serialization.*
import kotlinx.serialization.internal.CommonEnumSerializer
/**
 * 
 * @param editProfile 
 * @param title 
 * @param findFacebookFriends 
 * @param pushNotifications 
 * @param language 
 * @param appTour 
 * @param giveFeedback 
 * @param terms 
 * @param version 
 * @param feedbackMailRecipients 
 * @param feedbackMailSubject 
 * @param feedbackMailBody 
 * @param termsHTML 
 * @param privacyHTML 
 * @param privacy 
 * @param logoutConfirmationTitle 
 * @param findFacebookFriendsDescription 
 * @param appTourDescription 
 * @param giveFeedbackDescription 
 * @param termsDescription 
 * @param connectWithTwitter 
 * @param connectWithGooglePlus 
 * @param connectWithTwitterDescription 
 * @param connectWithGooglePlusDescription 
 * @param connectWithTwitterSuccess 
 * @param connectWithGooglePlusSuccess 
 * @param addSocialMediaError 
 * @param connectWithFacebook 
 * @param connectWithFacebookDescription 
 * @param connectWithFacebookSuccess 
 * @param connectWithGooglePlusConnected 
 * @param connectWithTwitterSuccessConnected 
 * @param twitterLoginAccountInUse 
 * @param googlePlusAlreadyRegistered 
 * @param options 
 * @param general 
 * @param upgradeToArtist 
 * @param addTattooShop 
 * @param findFriends 
 * @param account 
 * @param app 
 * @param rateApp 
 * @param switchTo 
 * @param email 
 * @param changePassword 
 * @param connectWithGoogle 
 * @param termsAndConditions 
 * @param about 
 * @param done 
 * @param cancel 
 * @param newPassword 
 * @param repeatPassword 
 * @param inviteFromFacebook 
 * @param ofYourFriends 
 * @param keepUp 
 * @param followAll 
 * @param follow 
 * @param following 
 * @param logOut 
 * @param sureYouWantToLogOut 
 * @param upgradeTitle 
 * @param upgradeText 
 * @param upgrade 
 * @param socialConnections 
 * @param personal 
 * @param connectedWithFacebook 
 * @param connectedWithGoogle 
 * @param connectedWithTwitter 
 * @param aboutHTML 
 * @param backToOptions 
 * @param successAllSet 
 * @param yourShopIsNowAPartOfTattoodo 
 * @param goToShop 
 * @param faqHTML 
 * @param faq 
 * @param thirdPartyLicenses 
 * @param switchProfile 
 * @param pushNotificationsDescription 
 */
@Serializable
data class Settings (
    @SerialName(value = "editProfile") @Required val editProfile: kotlin.String,
    @SerialName(value = "title") @Required val title: kotlin.String,
    @SerialName(value = "findFacebookFriends") @Required val findFacebookFriends: kotlin.String,
    @SerialName(value = "pushNotifications") @Required val pushNotifications: kotlin.String,
    @SerialName(value = "language") @Required val language: kotlin.String,
    @SerialName(value = "appTour") @Required val appTour: kotlin.String,
    @SerialName(value = "giveFeedback") @Required val giveFeedback: kotlin.String,
    @SerialName(value = "terms") @Required val terms: kotlin.String,
    @SerialName(value = "version") @Required val version: kotlin.String,
    @SerialName(value = "feedbackMailRecipients") @Required val feedbackMailRecipients: kotlin.String,
    @SerialName(value = "feedbackMailSubject") @Required val feedbackMailSubject: kotlin.String,
    @SerialName(value = "feedbackMailBody") @Required val feedbackMailBody: kotlin.String,
    @SerialName(value = "termsHTML") @Required val termsHTML: kotlin.String,
    @SerialName(value = "privacyHTML") @Required val privacyHTML: kotlin.String,
    @SerialName(value = "privacy") @Required val privacy: kotlin.String,
    @SerialName(value = "logoutConfirmationTitle") @Required val logoutConfirmationTitle: kotlin.String,
    @SerialName(value = "findFacebookFriendsDescription") @Required val findFacebookFriendsDescription: kotlin.String,
    @SerialName(value = "appTourDescription") @Required val appTourDescription: kotlin.String,
    @SerialName(value = "giveFeedbackDescription") @Required val giveFeedbackDescription: kotlin.String,
    @SerialName(value = "termsDescription") @Required val termsDescription: kotlin.String,
    @SerialName(value = "connectWithTwitter") @Required val connectWithTwitter: kotlin.String,
    @SerialName(value = "connectWithGooglePlus") @Required val connectWithGooglePlus: kotlin.String,
    @SerialName(value = "connectWithTwitterDescription") @Required val connectWithTwitterDescription: kotlin.String,
    @SerialName(value = "connectWithGooglePlusDescription") @Required val connectWithGooglePlusDescription: kotlin.String,
    @SerialName(value = "connectWithTwitterSuccess") @Required val connectWithTwitterSuccess: kotlin.String,
    @SerialName(value = "connectWithGooglePlusSuccess") @Required val connectWithGooglePlusSuccess: kotlin.String,
    @SerialName(value = "addSocialMediaError") @Required val addSocialMediaError: kotlin.String,
    @SerialName(value = "connectWithFacebook") @Required val connectWithFacebook: kotlin.String,
    @SerialName(value = "connectWithFacebookDescription") @Required val connectWithFacebookDescription: kotlin.String,
    @SerialName(value = "connectWithFacebookSuccess") @Required val connectWithFacebookSuccess: kotlin.String,
    @SerialName(value = "connectWithGooglePlusConnected") @Required val connectWithGooglePlusConnected: kotlin.String,
    @SerialName(value = "connectWithTwitterSuccessConnected") @Required val connectWithTwitterSuccessConnected: kotlin.String,
    @SerialName(value = "twitterLoginAccountInUse") @Required val twitterLoginAccountInUse: kotlin.String,
    @SerialName(value = "googlePlusAlreadyRegistered") @Required val googlePlusAlreadyRegistered: kotlin.String,
    @SerialName(value = "options") @Required val options: kotlin.String,
    @SerialName(value = "general") @Required val general: kotlin.String,
    @SerialName(value = "upgradeToArtist") @Required val upgradeToArtist: kotlin.String,
    @SerialName(value = "addTattooShop") @Required val addTattooShop: kotlin.String,
    @SerialName(value = "findFriends") @Required val findFriends: kotlin.String,
    @SerialName(value = "account") @Required val account: kotlin.String,
    @SerialName(value = "app") @Required val app: kotlin.String,
    @SerialName(value = "rateApp") @Required val rateApp: kotlin.String,
    @SerialName(value = "switchTo") @Required val switchTo: kotlin.String,
    @SerialName(value = "email") @Required val email: kotlin.String,
    @SerialName(value = "changePassword") @Required val changePassword: kotlin.String,
    @SerialName(value = "connectWithGoogle") @Required val connectWithGoogle: kotlin.String,
    @SerialName(value = "termsAndConditions") @Required val termsAndConditions: kotlin.String,
    @SerialName(value = "about") @Required val about: kotlin.String,
    @SerialName(value = "done") @Required val done: kotlin.String,
    @SerialName(value = "cancel") @Required val cancel: kotlin.String,
    @SerialName(value = "newPassword") @Required val newPassword: kotlin.String,
    @SerialName(value = "repeatPassword") @Required val repeatPassword: kotlin.String,
    @SerialName(value = "inviteFromFacebook") @Required val inviteFromFacebook: kotlin.String,
    @SerialName(value = "ofYourFriends") @Required val ofYourFriends: kotlin.String,
    @SerialName(value = "keepUp") @Required val keepUp: kotlin.String,
    @SerialName(value = "followAll") @Required val followAll: kotlin.String,
    @SerialName(value = "follow") @Required val follow: kotlin.String,
    @SerialName(value = "following") @Required val following: kotlin.String,
    @SerialName(value = "logOut") @Required val logOut: kotlin.String,
    @SerialName(value = "sureYouWantToLogOut") @Required val sureYouWantToLogOut: kotlin.String,
    @SerialName(value = "upgradeTitle") @Required val upgradeTitle: kotlin.String,
    @SerialName(value = "upgradeText") @Required val upgradeText: kotlin.String,
    @SerialName(value = "upgrade") @Required val upgrade: kotlin.String,
    @SerialName(value = "socialConnections") @Required val socialConnections: kotlin.String,
    @SerialName(value = "personal") @Required val personal: kotlin.String,
    @SerialName(value = "connectedWithFacebook") @Required val connectedWithFacebook: kotlin.String,
    @SerialName(value = "connectedWithGoogle") @Required val connectedWithGoogle: kotlin.String,
    @SerialName(value = "connectedWithTwitter") @Required val connectedWithTwitter: kotlin.String,
    @SerialName(value = "aboutHTML") @Required val aboutHTML: kotlin.String,
    @SerialName(value = "backToOptions") @Required val backToOptions: kotlin.String,
    @SerialName(value = "successAllSet") @Required val successAllSet: kotlin.String,
    @SerialName(value = "yourShopIsNowAPartOfTattoodo") @Required val yourShopIsNowAPartOfTattoodo: kotlin.String,
    @SerialName(value = "goToShop") @Required val goToShop: kotlin.String,
    @SerialName(value = "faqHTML") @Required val faqHTML: kotlin.String,
    @SerialName(value = "faq") @Required val faq: kotlin.String,
    @SerialName(value = "thirdPartyLicenses") @Required val thirdPartyLicenses: kotlin.String,
    @SerialName(value = "switchProfile") @Required val switchProfile: kotlin.String,
    @SerialName(value = "pushNotificationsDescription") @Required val pushNotificationsDescription: kotlin.String
) 



