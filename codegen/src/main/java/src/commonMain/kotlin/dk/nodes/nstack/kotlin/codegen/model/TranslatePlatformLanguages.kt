/**
* API
* This is the public API for nstack.io  Setup an application and use Application-Id and Rest-Api-Key
*
* The version of the OpenAPI document: 1.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package dk.nodes.nstack.kotlin.codegen.model


import kotlinx.serialization.*
import kotlinx.serialization.internal.CommonEnumSerializer
/**
 * 
 * @param activeModalActivate 
 * @param activeModalDeactivate 
 * @param activeTooltipActivate 
 * @param activeTooltipDeactivate 
 * @param addTitle 
 * @param connection 
 * @param defaultModalText 
 * @param defaultSavedSuccess 
 * @param defaultTooltip 
 * @param exportTooltip 
 * @param importTooltip 
 * @param keysTooltip 
 * @param setDefault 
 * @param test 
 * @param testModalTextActivate 
 * @param testModalTextDeactivate 
 * @param testSaveSuccessActivate 
 * @param testSaveSuccessDeactivate 
 * @param testTooltipActivate 
 * @param testTooltipDeactivate 
 * @param theConnection 
 * @param title 
 */
@Serializable
data class TranslatePlatformLanguages (
    @SerialName(value = "activeModalActivate") @Required val activeModalActivate: kotlin.String,
    @SerialName(value = "activeModalDeactivate") @Required val activeModalDeactivate: kotlin.String,
    @SerialName(value = "activeTooltipActivate") @Required val activeTooltipActivate: kotlin.String,
    @SerialName(value = "activeTooltipDeactivate") @Required val activeTooltipDeactivate: kotlin.String,
    @SerialName(value = "addTitle") @Required val addTitle: kotlin.String,
    @SerialName(value = "connection") @Required val connection: kotlin.String,
    @SerialName(value = "defaultModalText") @Required val defaultModalText: kotlin.String,
    @SerialName(value = "defaultSavedSuccess") @Required val defaultSavedSuccess: kotlin.String,
    @SerialName(value = "defaultTooltip") @Required val defaultTooltip: kotlin.String,
    @SerialName(value = "exportTooltip") @Required val exportTooltip: kotlin.String,
    @SerialName(value = "importTooltip") @Required val importTooltip: kotlin.String,
    @SerialName(value = "keysTooltip") @Required val keysTooltip: kotlin.String,
    @SerialName(value = "setDefault") @Required val setDefault: kotlin.String,
    @SerialName(value = "test") @Required val test: kotlin.String,
    @SerialName(value = "testModalTextActivate") @Required val testModalTextActivate: kotlin.String,
    @SerialName(value = "testModalTextDeactivate") @Required val testModalTextDeactivate: kotlin.String,
    @SerialName(value = "testSaveSuccessActivate") @Required val testSaveSuccessActivate: kotlin.String,
    @SerialName(value = "testSaveSuccessDeactivate") @Required val testSaveSuccessDeactivate: kotlin.String,
    @SerialName(value = "testTooltipActivate") @Required val testTooltipActivate: kotlin.String,
    @SerialName(value = "testTooltipDeactivate") @Required val testTooltipDeactivate: kotlin.String,
    @SerialName(value = "theConnection") @Required val theConnection: kotlin.String,
    @SerialName(value = "title") @Required val title: kotlin.String
) 



