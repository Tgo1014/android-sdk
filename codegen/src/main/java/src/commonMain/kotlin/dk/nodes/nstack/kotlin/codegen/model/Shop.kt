/**
* API
* This is the public API for nstack.io  Setup an application and use Application-Id and Rest-Api-Key
*
* The version of the OpenAPI document: 1.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package dk.nodes.nstack.kotlin.codegen.model


import kotlinx.serialization.*
import kotlinx.serialization.internal.CommonEnumSerializer
/**
 * 
 * @param createShop 
 * @param oneLastStep 
 * @param website 
 * @param shopEmail 
 * @param customerPhone 
 * @param openingHours 
 * @param to 
 * @param oneLastStepDescription 
 * @param anEmailHasBeenSent 
 * @param clickTheLink 
 * @param continueToShop 
 * @param dragToReplace 
 * @param cancel 
 * @param use 
 * @param name 
 * @param username 
 * @param edit 
 * @param sorry 
 * @param yourImageDidntFit 
 * @param okay 
 * @param capture 
 * @param fromLibrary 
 * @param delete 
 * @param country 
 * @param address1 
 * @param address2 
 * @param cityState 
 * @param stateProvince 
 * @param zip 
 * @param create 
 * @param shopName 
 * @param remove 
 * @param deleteWorkplace 
 * @param searchArtists 
 * @param invite 
 * @param connected 
 * @param pending 
 * @param searchShops 
 * @param yourShopMightAlreadyExist 
 * @param ourArtists 
 * @param removeArtist 
 * @param doYouReallyWantToRemoveThisArtist 
 * @param done 
 * @param shopDescription 
 * @param shopDescriptionExample 
 * @param editShop 
 * @param editContact 
 * @param contact 
 * @param address 
 * @param follow 
 * @param getInTouch 
 * @param beTheFirstToReview 
 * @param aboutShop 
 * @param gallery 
 * @param taggedPhotos 
 * @param guest 
 * @param shopInfo 
 * @param response 
 * @param viewMore 
 * @param mailUs 
 * @param callUs 
 * @param mail 
 * @param add 
 * @param addTattoos 
 * @param following 
 * @param isThisYourShop 
 * @param joinTattoodo 
 * @param claimThisShop 
 * @param yourRating 
 * @param howWasYourExperience 
 * @param review 
 * @param tellAboutYourExperience 
 * @param yourResponse 
 * @param claimShop 
 * @param getAnAwesomeShopPage 
 * @param showcaseShop 
 * @param getStarted 
 * @param reachMillionsOfCustomers 
 * @param getNoticedToday 
 * @param connectToNewClients 
 * @param buildYourOnlinePresence 
 * @param createNew 
 * @param goToShop 
 * @param shareYourInspiration 
 * @param postATattoo 
 * @param closed 
 * @param shareYourExperience 
 * @param reviewTheShop 
 * @param claimed 
 * @param invalidImageTitle 
 * @param searchForCountry 
 * @param noArtists 
 * @param inviteArtist 
 * @param reviews 
 * @param seeMore 
 * @param noArtistsSubtitle 
 * @param shopIsAlreadyClaimed 
 * @param termsAndConditionsText 
 * @param termsOfUse 
 * @param privacyPolicy 
 * @param insights 
 * @param profileViews 
 * @param newFollowers 
 * @param contactLeads 
 * @param insightsTitle 
 * @param insightsSubtitle 
 * @param searchStudios 
 * @param info 
 * @param work 
 * @param guestArtists 
 * @param artists 
 * @param about 
 * @param dontForgetShareYourExperience 
 * @param reply 
 * @param addWork 
 * @param addDescription 
 * @param addArtist 
 * @param alreadyReplied 
 * @param guestArtistFrom 
 * @param whatDoesYourStudioDo 
 * @param addCoverPhoto 
 * @param openingHoursNotAvailable 
 * @param insightsPastThirtyDays 
 * @param emptyArtistsTitle 
 * @param emptyArtistsSubtitle 
 * @param noWork 
 * @param noWorkSubtitle 
 * @param viewAll 
 * @param insightsHiddenTitle 
 * @param insightsHiddenSubtitle 
 * @param insightsHiddenButton 
 * @param no 
 * @param yes 
 */
@Serializable
data class Shop (
    @SerialName(value = "createShop") @Required val createShop: kotlin.String,
    @SerialName(value = "oneLastStep") @Required val oneLastStep: kotlin.String,
    @SerialName(value = "website") @Required val website: kotlin.String,
    @SerialName(value = "shopEmail") @Required val shopEmail: kotlin.String,
    @SerialName(value = "customerPhone") @Required val customerPhone: kotlin.String,
    @SerialName(value = "openingHours") @Required val openingHours: kotlin.String,
    @SerialName(value = "to") @Required val to: kotlin.String,
    @SerialName(value = "oneLastStepDescription") @Required val oneLastStepDescription: kotlin.String,
    @SerialName(value = "anEmailHasBeenSent") @Required val anEmailHasBeenSent: kotlin.String,
    @SerialName(value = "clickTheLink") @Required val clickTheLink: kotlin.String,
    @SerialName(value = "continueToShop") @Required val continueToShop: kotlin.String,
    @SerialName(value = "dragToReplace") @Required val dragToReplace: kotlin.String,
    @SerialName(value = "cancel") @Required val cancel: kotlin.String,
    @SerialName(value = "use") @Required val use: kotlin.String,
    @SerialName(value = "name") @Required val name: kotlin.String,
    @SerialName(value = "username") @Required val username: kotlin.String,
    @SerialName(value = "edit") @Required val edit: kotlin.String,
    @SerialName(value = "sorry") @Required val sorry: kotlin.String,
    @SerialName(value = "yourImageDidntFit") @Required val yourImageDidntFit: kotlin.String,
    @SerialName(value = "okay") @Required val okay: kotlin.String,
    @SerialName(value = "capture") @Required val capture: kotlin.String,
    @SerialName(value = "fromLibrary") @Required val fromLibrary: kotlin.String,
    @SerialName(value = "delete") @Required val delete: kotlin.String,
    @SerialName(value = "country") @Required val country: kotlin.String,
    @SerialName(value = "address1") @Required val address1: kotlin.String,
    @SerialName(value = "address2") @Required val address2: kotlin.String,
    @SerialName(value = "cityState") @Required val cityState: kotlin.String,
    @SerialName(value = "stateProvince") @Required val stateProvince: kotlin.String,
    @SerialName(value = "zip") @Required val zip: kotlin.String,
    @SerialName(value = "create") @Required val create: kotlin.String,
    @SerialName(value = "shopName") @Required val shopName: kotlin.String,
    @SerialName(value = "remove") @Required val remove: kotlin.String,
    @SerialName(value = "deleteWorkplace") @Required val deleteWorkplace: kotlin.String,
    @SerialName(value = "searchArtists") @Required val searchArtists: kotlin.String,
    @SerialName(value = "invite") @Required val invite: kotlin.String,
    @SerialName(value = "connected") @Required val connected: kotlin.String,
    @SerialName(value = "pending") @Required val pending: kotlin.String,
    @SerialName(value = "searchShops") @Required val searchShops: kotlin.String,
    @SerialName(value = "yourShopMightAlreadyExist") @Required val yourShopMightAlreadyExist: kotlin.String,
    @SerialName(value = "ourArtists") @Required val ourArtists: kotlin.String,
    @SerialName(value = "removeArtist") @Required val removeArtist: kotlin.String,
    @SerialName(value = "doYouReallyWantToRemoveThisArtist") @Required val doYouReallyWantToRemoveThisArtist: kotlin.String,
    @SerialName(value = "done") @Required val done: kotlin.String,
    @SerialName(value = "shopDescription") @Required val shopDescription: kotlin.String,
    @SerialName(value = "shopDescriptionExample") @Required val shopDescriptionExample: kotlin.String,
    @SerialName(value = "editShop") @Required val editShop: kotlin.String,
    @SerialName(value = "editContact") @Required val editContact: kotlin.String,
    @SerialName(value = "contact") @Required val contact: kotlin.String,
    @SerialName(value = "address") @Required val address: kotlin.String,
    @SerialName(value = "follow") @Required val follow: kotlin.String,
    @SerialName(value = "getInTouch") @Required val getInTouch: kotlin.String,
    @SerialName(value = "beTheFirstToReview") @Required val beTheFirstToReview: kotlin.String,
    @SerialName(value = "aboutShop") @Required val aboutShop: kotlin.String,
    @SerialName(value = "gallery") @Required val gallery: kotlin.String,
    @SerialName(value = "taggedPhotos") @Required val taggedPhotos: kotlin.String,
    @SerialName(value = "guest") @Required val guest: kotlin.String,
    @SerialName(value = "shopInfo") @Required val shopInfo: kotlin.String,
    @SerialName(value = "response") @Required val response: kotlin.String,
    @SerialName(value = "viewMore") @Required val viewMore: kotlin.String,
    @SerialName(value = "mailUs") @Required val mailUs: kotlin.String,
    @SerialName(value = "callUs") @Required val callUs: kotlin.String,
    @SerialName(value = "mail") @Required val mail: kotlin.String,
    @SerialName(value = "add") @Required val add: kotlin.String,
    @SerialName(value = "addTattoos") @Required val addTattoos: kotlin.String,
    @SerialName(value = "following") @Required val following: kotlin.String,
    @SerialName(value = "isThisYourShop") @Required val isThisYourShop: kotlin.String,
    @SerialName(value = "joinTattoodo") @Required val joinTattoodo: kotlin.String,
    @SerialName(value = "claimThisShop") @Required val claimThisShop: kotlin.String,
    @SerialName(value = "yourRating") @Required val yourRating: kotlin.String,
    @SerialName(value = "howWasYourExperience") @Required val howWasYourExperience: kotlin.String,
    @SerialName(value = "review") @Required val review: kotlin.String,
    @SerialName(value = "tellAboutYourExperience") @Required val tellAboutYourExperience: kotlin.String,
    @SerialName(value = "yourResponse") @Required val yourResponse: kotlin.String,
    @SerialName(value = "claimShop") @Required val claimShop: kotlin.String,
    @SerialName(value = "getAnAwesomeShopPage") @Required val getAnAwesomeShopPage: kotlin.String,
    @SerialName(value = "showcaseShop") @Required val showcaseShop: kotlin.String,
    @SerialName(value = "getStarted") @Required val getStarted: kotlin.String,
    @SerialName(value = "reachMillionsOfCustomers") @Required val reachMillionsOfCustomers: kotlin.String,
    @SerialName(value = "getNoticedToday") @Required val getNoticedToday: kotlin.String,
    @SerialName(value = "connectToNewClients") @Required val connectToNewClients: kotlin.String,
    @SerialName(value = "buildYourOnlinePresence") @Required val buildYourOnlinePresence: kotlin.String,
    @SerialName(value = "createNew") @Required val createNew: kotlin.String,
    @SerialName(value = "goToShop") @Required val goToShop: kotlin.String,
    @SerialName(value = "shareYourInspiration") @Required val shareYourInspiration: kotlin.String,
    @SerialName(value = "postATattoo") @Required val postATattoo: kotlin.String,
    @SerialName(value = "closed") @Required val closed: kotlin.String,
    @SerialName(value = "shareYourExperience") @Required val shareYourExperience: kotlin.String,
    @SerialName(value = "reviewTheShop") @Required val reviewTheShop: kotlin.String,
    @SerialName(value = "claimed") @Required val claimed: kotlin.String,
    @SerialName(value = "invalidImageTitle") @Required val invalidImageTitle: kotlin.String,
    @SerialName(value = "searchForCountry") @Required val searchForCountry: kotlin.String,
    @SerialName(value = "noArtists") @Required val noArtists: kotlin.String,
    @SerialName(value = "inviteArtist") @Required val inviteArtist: kotlin.String,
    @SerialName(value = "reviews") @Required val reviews: kotlin.String,
    @SerialName(value = "seeMore") @Required val seeMore: kotlin.String,
    @SerialName(value = "noArtistsSubtitle") @Required val noArtistsSubtitle: kotlin.String,
    @SerialName(value = "shopIsAlreadyClaimed") @Required val shopIsAlreadyClaimed: kotlin.String,
    @SerialName(value = "termsAndConditionsText") @Required val termsAndConditionsText: kotlin.String,
    @SerialName(value = "termsOfUse") @Required val termsOfUse: kotlin.String,
    @SerialName(value = "privacyPolicy") @Required val privacyPolicy: kotlin.String,
    @SerialName(value = "insights") @Required val insights: kotlin.String,
    @SerialName(value = "profileViews") @Required val profileViews: kotlin.String,
    @SerialName(value = "newFollowers") @Required val newFollowers: kotlin.String,
    @SerialName(value = "contactLeads") @Required val contactLeads: kotlin.String,
    @SerialName(value = "insightsTitle") @Required val insightsTitle: kotlin.String,
    @SerialName(value = "insightsSubtitle") @Required val insightsSubtitle: kotlin.String,
    @SerialName(value = "searchStudios") @Required val searchStudios: kotlin.String,
    @SerialName(value = "info") @Required val info: kotlin.String,
    @SerialName(value = "work") @Required val work: kotlin.String,
    @SerialName(value = "guestArtists") @Required val guestArtists: kotlin.String,
    @SerialName(value = "artists") @Required val artists: kotlin.String,
    @SerialName(value = "about") @Required val about: kotlin.String,
    @SerialName(value = "dontForgetShareYourExperience") @Required val dontForgetShareYourExperience: kotlin.String,
    @SerialName(value = "reply") @Required val reply: kotlin.String,
    @SerialName(value = "addWork") @Required val addWork: kotlin.String,
    @SerialName(value = "addDescription") @Required val addDescription: kotlin.String,
    @SerialName(value = "addArtist") @Required val addArtist: kotlin.String,
    @SerialName(value = "alreadyReplied") @Required val alreadyReplied: kotlin.String,
    @SerialName(value = "guestArtistFrom") @Required val guestArtistFrom: kotlin.String,
    @SerialName(value = "whatDoesYourStudioDo") @Required val whatDoesYourStudioDo: kotlin.String,
    @SerialName(value = "addCoverPhoto") @Required val addCoverPhoto: kotlin.String,
    @SerialName(value = "openingHoursNotAvailable") @Required val openingHoursNotAvailable: kotlin.String,
    @SerialName(value = "insightsPastThirtyDays") @Required val insightsPastThirtyDays: kotlin.String,
    @SerialName(value = "emptyArtistsTitle") @Required val emptyArtistsTitle: kotlin.String,
    @SerialName(value = "emptyArtistsSubtitle") @Required val emptyArtistsSubtitle: kotlin.String,
    @SerialName(value = "noWork") @Required val noWork: kotlin.String,
    @SerialName(value = "noWorkSubtitle") @Required val noWorkSubtitle: kotlin.String,
    @SerialName(value = "viewAll") @Required val viewAll: kotlin.String,
    @SerialName(value = "insightsHiddenTitle") @Required val insightsHiddenTitle: kotlin.String,
    @SerialName(value = "insightsHiddenSubtitle") @Required val insightsHiddenSubtitle: kotlin.String,
    @SerialName(value = "insightsHiddenButton") @Required val insightsHiddenButton: kotlin.String,
    @SerialName(value = "no") val no: kotlin.String? = null,
    @SerialName(value = "yes") val yes: kotlin.String? = null
) 



