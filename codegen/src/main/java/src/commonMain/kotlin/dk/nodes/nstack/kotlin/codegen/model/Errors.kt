/**
* API
* This is the public API for nstack.io  Setup an application and use Application-Id and Rest-Api-Key
*
* The version of the OpenAPI document: 1.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package dk.nodes.nstack.kotlin.codegen.model


import kotlinx.serialization.*
import kotlinx.serialization.internal.CommonEnumSerializer
/**
 * 
 * @param invalidOrMissingFields 
 * @param emailAlreadyInUse 
 * @param title 
 * @param facebookTokenVerificationFailed 
 * @param twitterTokenVerificationFailed 
 * @param unknownError 
 * @param incorrectPassword 
 * @param newPasswordTooShort 
 * @param loginNeeded 
 * @param loginButton 
 * @param loginNeededTitle 
 * @param connectionErrorTitle 
 * @param connectionError 
 * @param tryAgain 
 * @param cancel 
 * @param giveCameraAccessText 
 * @param giveLibraryAccessText 
 * @param giveAccessButton 
 * @param noCameraAccessText 
 * @param openSettingsButton 
 * @param noLibraryAccessText 
 * @param canNotSendEmailMessage 
 * @param invalidToken 
 * @param couldntFindUser 
 * @param tokenExpired 
 * @param invalidAcceptHeader 
 * @param couldntFindEntity 
 * @param twitterLoginErrorTitle 
 * @param couldntFindImage 
 * @param invalidTokenTitle 
 * @param noCameraAccessTextAndroid 
 * @param noLibraryAccessTextAndroid 
 * @param cameraConnectionError 
 * @param loginCanceledTitle 
 * @param loginCanceledMessage 
 * @param loginFailedTitle 
 * @param loginFailedMessage 
 * @param shopsCannotPinPosts 
 * @param invalidImage 
 * @param invalidShopName 
 * @param fieldRequired 
 * @param passwordErrorCharacter 
 * @param passwordErrorTooShort 
 * @param passwordErrorIncorrect 
 * @param invalidImageTitle 
 * @param failedToLoadContent 
 * @param checkIfYouHaveAnInternetConnection 
 * @param pullToRefresh 
 * @param noCameraPermissionTitle 
 * @param noCameraPermissionMessage 
 */
@Serializable
data class Errors (
    @SerialName(value = "invalidOrMissingFields") @Required val invalidOrMissingFields: kotlin.String,
    @SerialName(value = "emailAlreadyInUse") @Required val emailAlreadyInUse: kotlin.String,
    @SerialName(value = "title") @Required val title: kotlin.String,
    @SerialName(value = "facebookTokenVerificationFailed") @Required val facebookTokenVerificationFailed: kotlin.String,
    @SerialName(value = "twitterTokenVerificationFailed") @Required val twitterTokenVerificationFailed: kotlin.String,
    @SerialName(value = "unknownError") @Required val unknownError: kotlin.String,
    @SerialName(value = "incorrectPassword") @Required val incorrectPassword: kotlin.String,
    @SerialName(value = "newPasswordTooShort") @Required val newPasswordTooShort: kotlin.String,
    @SerialName(value = "loginNeeded") @Required val loginNeeded: kotlin.String,
    @SerialName(value = "loginButton") @Required val loginButton: kotlin.String,
    @SerialName(value = "loginNeededTitle") @Required val loginNeededTitle: kotlin.String,
    @SerialName(value = "connectionErrorTitle") @Required val connectionErrorTitle: kotlin.String,
    @SerialName(value = "connectionError") @Required val connectionError: kotlin.String,
    @SerialName(value = "tryAgain") @Required val tryAgain: kotlin.String,
    @SerialName(value = "cancel") @Required val cancel: kotlin.String,
    @SerialName(value = "giveCameraAccessText") @Required val giveCameraAccessText: kotlin.String,
    @SerialName(value = "giveLibraryAccessText") @Required val giveLibraryAccessText: kotlin.String,
    @SerialName(value = "giveAccessButton") @Required val giveAccessButton: kotlin.String,
    @SerialName(value = "noCameraAccessText") @Required val noCameraAccessText: kotlin.String,
    @SerialName(value = "openSettingsButton") @Required val openSettingsButton: kotlin.String,
    @SerialName(value = "noLibraryAccessText") @Required val noLibraryAccessText: kotlin.String,
    @SerialName(value = "canNotSendEmailMessage") @Required val canNotSendEmailMessage: kotlin.String,
    @SerialName(value = "invalidToken") @Required val invalidToken: kotlin.String,
    @SerialName(value = "couldntFindUser") @Required val couldntFindUser: kotlin.String,
    @SerialName(value = "tokenExpired") @Required val tokenExpired: kotlin.String,
    @SerialName(value = "invalidAcceptHeader") @Required val invalidAcceptHeader: kotlin.String,
    @SerialName(value = "couldntFindEntity") @Required val couldntFindEntity: kotlin.String,
    @SerialName(value = "twitterLoginErrorTitle") @Required val twitterLoginErrorTitle: kotlin.String,
    @SerialName(value = "couldntFindImage") @Required val couldntFindImage: kotlin.String,
    @SerialName(value = "invalidTokenTitle") @Required val invalidTokenTitle: kotlin.String,
    @SerialName(value = "noCameraAccessTextAndroid") @Required val noCameraAccessTextAndroid: kotlin.String,
    @SerialName(value = "noLibraryAccessTextAndroid") @Required val noLibraryAccessTextAndroid: kotlin.String,
    @SerialName(value = "cameraConnectionError") @Required val cameraConnectionError: kotlin.String,
    @SerialName(value = "loginCanceledTitle") @Required val loginCanceledTitle: kotlin.String,
    @SerialName(value = "loginCanceledMessage") @Required val loginCanceledMessage: kotlin.String,
    @SerialName(value = "loginFailedTitle") @Required val loginFailedTitle: kotlin.String,
    @SerialName(value = "loginFailedMessage") @Required val loginFailedMessage: kotlin.String,
    @SerialName(value = "shopsCannotPinPosts") @Required val shopsCannotPinPosts: kotlin.String,
    @SerialName(value = "invalidImage") @Required val invalidImage: kotlin.String,
    @SerialName(value = "invalidShopName") @Required val invalidShopName: kotlin.String,
    @SerialName(value = "fieldRequired") @Required val fieldRequired: kotlin.String,
    @SerialName(value = "passwordErrorCharacter") @Required val passwordErrorCharacter: kotlin.String,
    @SerialName(value = "passwordErrorTooShort") @Required val passwordErrorTooShort: kotlin.String,
    @SerialName(value = "passwordErrorIncorrect") @Required val passwordErrorIncorrect: kotlin.String,
    @SerialName(value = "invalidImageTitle") @Required val invalidImageTitle: kotlin.String,
    @SerialName(value = "failedToLoadContent") @Required val failedToLoadContent: kotlin.String,
    @SerialName(value = "checkIfYouHaveAnInternetConnection") @Required val checkIfYouHaveAnInternetConnection: kotlin.String,
    @SerialName(value = "pullToRefresh") @Required val pullToRefresh: kotlin.String,
    @SerialName(value = "noCameraPermissionTitle") @Required val noCameraPermissionTitle: kotlin.String,
    @SerialName(value = "noCameraPermissionMessage") @Required val noCameraPermissionMessage: kotlin.String
) 



