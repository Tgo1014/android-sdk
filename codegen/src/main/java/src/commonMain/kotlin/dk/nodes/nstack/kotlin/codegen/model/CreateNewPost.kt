/**
* API
* This is the public API for nstack.io  Setup an application and use Application-Id and Rest-Api-Key
*
* The version of the OpenAPI document: 1.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package dk.nodes.nstack.kotlin.codegen.model


import kotlinx.serialization.*
import kotlinx.serialization.internal.CommonEnumSerializer
/**
 * 
 * @param library 
 * @param capture 
 * @param choosePhotoTitle 
 * @param takePhotoTitle 
 * @param nextButton 
 * @param noCameraTitle 
 * @param noCameraMessage 
 * @param noImages 
 * @param errorBodyPartNoneAndMyBodyChecked 
 * @param addArtist 
 * @param addShop 
 * @param addClient 
 * @param me 
 * @param addToBoard 
 * @param submitLabel 
 * @param searchArtist 
 * @param searchShop 
 * @param searchClient 
 * @param addDescription 
 * @param uploadNow 
 * @param createPostError 
 */
@Serializable
data class CreateNewPost (
    @SerialName(value = "library") @Required val library: kotlin.String,
    @SerialName(value = "capture") @Required val capture: kotlin.String,
    @SerialName(value = "choosePhotoTitle") @Required val choosePhotoTitle: kotlin.String,
    @SerialName(value = "takePhotoTitle") @Required val takePhotoTitle: kotlin.String,
    @SerialName(value = "nextButton") @Required val nextButton: kotlin.String,
    @SerialName(value = "noCameraTitle") @Required val noCameraTitle: kotlin.String,
    @SerialName(value = "noCameraMessage") @Required val noCameraMessage: kotlin.String,
    @SerialName(value = "noImages") @Required val noImages: kotlin.String,
    @SerialName(value = "errorBodyPartNoneAndMyBodyChecked") @Required val errorBodyPartNoneAndMyBodyChecked: kotlin.String,
    @SerialName(value = "addArtist") @Required val addArtist: kotlin.String,
    @SerialName(value = "addShop") @Required val addShop: kotlin.String,
    @SerialName(value = "addClient") @Required val addClient: kotlin.String,
    @SerialName(value = "me") @Required val me: kotlin.String,
    @SerialName(value = "addToBoard") @Required val addToBoard: kotlin.String,
    @SerialName(value = "submitLabel") @Required val submitLabel: kotlin.String,
    @SerialName(value = "searchArtist") @Required val searchArtist: kotlin.String,
    @SerialName(value = "searchShop") @Required val searchShop: kotlin.String,
    @SerialName(value = "searchClient") @Required val searchClient: kotlin.String,
    @SerialName(value = "addDescription") @Required val addDescription: kotlin.String,
    @SerialName(value = "uploadNow") @Required val uploadNow: kotlin.String,
    @SerialName(value = "createPostError") @Required val createPostError: kotlin.String
) 



