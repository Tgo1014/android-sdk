/**
* API
* This is the public API for nstack.io  Setup an application and use Application-Id and Rest-Api-Key
*
* The version of the OpenAPI document: 1.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package dk.nodes.nstack.kotlin.codegen.model


import com.squareup.moshi.Json
/**
 * 
 * @param title 
 * @param noPosts 
 * @param goDiscover 
 * @param report 
 * @param edit 
 * @param delete 
 * @param reportTitle 
 * @param reportMessage 
 * @param deleteTitle 
 * @param deleteMessage 
 * @param postNotFoundTitle 
 * @param postNotFoundMessage 
 * @param postAlreadyReportedTitle 
 * @param postAlreadyReportedMessage 
 * @param postDeleteNotUsersMessage 
 * @param myBody 
 * @param likeSingular 
 * @param likePlural 
 * @param reportSuccess 
 * @param option 
 * @param deleteSuccess 
 * @param deleteCancel 
 * @param reportCancel 
 * @param photoTitle 
 * @param peopleYouFollow 
 * @param findPeopleToFollow 
 * @param skip 
 * @param suggestedProfiles 
 * @param tattoosOfTheDay 
 * @param coverStories 
 * @param discoverTattooStyles 
 */

data class Feed (
    @Json(name = "title")
    val title: kotlin.String,
    @Json(name = "noPosts")
    val noPosts: kotlin.String,
    @Json(name = "goDiscover")
    val goDiscover: kotlin.String,
    @Json(name = "report")
    val report: kotlin.String,
    @Json(name = "edit")
    val edit: kotlin.String,
    @Json(name = "delete")
    val delete: kotlin.String,
    @Json(name = "reportTitle")
    val reportTitle: kotlin.String,
    @Json(name = "reportMessage")
    val reportMessage: kotlin.String,
    @Json(name = "deleteTitle")
    val deleteTitle: kotlin.String,
    @Json(name = "deleteMessage")
    val deleteMessage: kotlin.String,
    @Json(name = "postNotFoundTitle")
    val postNotFoundTitle: kotlin.String,
    @Json(name = "postNotFoundMessage")
    val postNotFoundMessage: kotlin.String,
    @Json(name = "postAlreadyReportedTitle")
    val postAlreadyReportedTitle: kotlin.String,
    @Json(name = "postAlreadyReportedMessage")
    val postAlreadyReportedMessage: kotlin.String,
    @Json(name = "postDeleteNotUsersMessage")
    val postDeleteNotUsersMessage: kotlin.String,
    @Json(name = "myBody")
    val myBody: kotlin.String,
    @Json(name = "likeSingular")
    val likeSingular: kotlin.String,
    @Json(name = "likePlural")
    val likePlural: kotlin.String,
    @Json(name = "reportSuccess")
    val reportSuccess: kotlin.String,
    @Json(name = "option")
    val option: kotlin.String,
    @Json(name = "deleteSuccess")
    val deleteSuccess: kotlin.String,
    @Json(name = "deleteCancel")
    val deleteCancel: kotlin.String,
    @Json(name = "reportCancel")
    val reportCancel: kotlin.String,
    @Json(name = "photoTitle")
    val photoTitle: kotlin.String,
    @Json(name = "peopleYouFollow")
    val peopleYouFollow: kotlin.String,
    @Json(name = "findPeopleToFollow")
    val findPeopleToFollow: kotlin.String,
    @Json(name = "skip")
    val skip: kotlin.String,
    @Json(name = "suggestedProfiles")
    val suggestedProfiles: kotlin.String,
    @Json(name = "tattoosOfTheDay")
    val tattoosOfTheDay: kotlin.String,
    @Json(name = "coverStories")
    val coverStories: kotlin.String,
    @Json(name = "discoverTattooStyles")
    val discoverTattooStyles: kotlin.String
) 



