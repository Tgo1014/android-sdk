/**
* API
* This is the public API for nstack.io  Setup an application and use Application-Id and Rest-Api-Key
*
* The version of the OpenAPI document: 1.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package dk.nodes.nstack.kotlin.codegen.model


import com.squareup.moshi.Json
/**
 * 
 * @param autoRedirectToFirstPlatform 
 * @param direction 
 * @param inProduction 
 * @param key 
 * @param keys 
 * @param language 
 * @param languages 
 * @param locale 
 * @param lrm 
 * @param platforms 
 * @param rlm 
 * @param section 
 * @param sections 
 * @param theKey 
 * @param theLanguage 
 * @param thePlatform 
 * @param theSection 
 * @param theTranslation 
 * @param translated 
 * @param translation 
 * @param value 
 */

data class TranslateDefault (
    @Json(name = "autoRedirectToFirstPlatform")
    val autoRedirectToFirstPlatform: kotlin.String,
    @Json(name = "direction")
    val direction: kotlin.String,
    @Json(name = "inProduction")
    val inProduction: kotlin.String,
    @Json(name = "key")
    val key: kotlin.String,
    @Json(name = "keys")
    val keys: kotlin.String,
    @Json(name = "language")
    val language: kotlin.String,
    @Json(name = "languages")
    val languages: kotlin.String,
    @Json(name = "locale")
    val locale: kotlin.String,
    @Json(name = "lrm")
    val lrm: kotlin.String,
    @Json(name = "platforms")
    val platforms: kotlin.String,
    @Json(name = "rlm")
    val rlm: kotlin.String,
    @Json(name = "section")
    val section: kotlin.String,
    @Json(name = "sections")
    val sections: kotlin.String,
    @Json(name = "theKey")
    val theKey: kotlin.String,
    @Json(name = "theLanguage")
    val theLanguage: kotlin.String,
    @Json(name = "thePlatform")
    val thePlatform: kotlin.String,
    @Json(name = "theSection")
    val theSection: kotlin.String,
    @Json(name = "theTranslation")
    val theTranslation: kotlin.String,
    @Json(name = "translated")
    val translated: kotlin.String,
    @Json(name = "translation")
    val translation: kotlin.String,
    @Json(name = "value")
    val value: kotlin.String
) 



