/**
* API
* This is the public API for nstack.io  Setup an application and use Application-Id and Rest-Api-Key
*
* The version of the OpenAPI document: 1.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package dk.nodes.nstack.kotlin.codegen.model


import com.squareup.moshi.Json
/**
 * 
 * @param createShop 
 * @param oneLastStep 
 * @param website 
 * @param shopEmail 
 * @param customerPhone 
 * @param openingHours 
 * @param to 
 * @param oneLastStepDescription 
 * @param anEmailHasBeenSent 
 * @param clickTheLink 
 * @param continueToShop 
 * @param dragToReplace 
 * @param cancel 
 * @param use 
 * @param name 
 * @param username 
 * @param edit 
 * @param sorry 
 * @param yourImageDidntFit 
 * @param okay 
 * @param capture 
 * @param fromLibrary 
 * @param delete 
 * @param country 
 * @param address1 
 * @param address2 
 * @param cityState 
 * @param stateProvince 
 * @param zip 
 * @param create 
 * @param shopName 
 * @param remove 
 * @param deleteWorkplace 
 * @param searchArtists 
 * @param invite 
 * @param connected 
 * @param pending 
 * @param searchShops 
 * @param yourShopMightAlreadyExist 
 * @param ourArtists 
 * @param removeArtist 
 * @param doYouReallyWantToRemoveThisArtist 
 * @param done 
 * @param shopDescription 
 * @param shopDescriptionExample 
 * @param editShop 
 * @param editContact 
 * @param contact 
 * @param address 
 * @param follow 
 * @param getInTouch 
 * @param beTheFirstToReview 
 * @param aboutShop 
 * @param gallery 
 * @param taggedPhotos 
 * @param guest 
 * @param shopInfo 
 * @param response 
 * @param viewMore 
 * @param mailUs 
 * @param callUs 
 * @param mail 
 * @param add 
 * @param addTattoos 
 * @param following 
 * @param isThisYourShop 
 * @param joinTattoodo 
 * @param claimThisShop 
 * @param yourRating 
 * @param howWasYourExperience 
 * @param review 
 * @param tellAboutYourExperience 
 * @param yourResponse 
 * @param claimShop 
 * @param getAnAwesomeShopPage 
 * @param showcaseShop 
 * @param getStarted 
 * @param reachMillionsOfCustomers 
 * @param getNoticedToday 
 * @param connectToNewClients 
 * @param buildYourOnlinePresence 
 * @param createNew 
 * @param goToShop 
 * @param shareYourInspiration 
 * @param postATattoo 
 * @param closed 
 * @param shareYourExperience 
 * @param reviewTheShop 
 * @param claimed 
 * @param invalidImageTitle 
 * @param searchForCountry 
 * @param noArtists 
 * @param inviteArtist 
 * @param reviews 
 * @param seeMore 
 * @param noArtistsSubtitle 
 * @param shopIsAlreadyClaimed 
 * @param termsAndConditionsText 
 * @param termsOfUse 
 * @param privacyPolicy 
 * @param insights 
 * @param profileViews 
 * @param newFollowers 
 * @param contactLeads 
 * @param insightsTitle 
 * @param insightsSubtitle 
 * @param searchStudios 
 * @param info 
 * @param work 
 * @param guestArtists 
 * @param artists 
 * @param about 
 * @param dontForgetShareYourExperience 
 * @param reply 
 * @param addWork 
 * @param addDescription 
 * @param addArtist 
 * @param alreadyReplied 
 * @param guestArtistFrom 
 * @param whatDoesYourStudioDo 
 * @param addCoverPhoto 
 * @param openingHoursNotAvailable 
 * @param insightsPastThirtyDays 
 * @param emptyArtistsTitle 
 * @param emptyArtistsSubtitle 
 * @param noWork 
 * @param noWorkSubtitle 
 * @param viewAll 
 * @param insightsHiddenTitle 
 * @param insightsHiddenSubtitle 
 * @param insightsHiddenButton 
 * @param no 
 * @param yes 
 */

data class Shop (
    @Json(name = "createShop")
    val createShop: kotlin.String,
    @Json(name = "oneLastStep")
    val oneLastStep: kotlin.String,
    @Json(name = "website")
    val website: kotlin.String,
    @Json(name = "shopEmail")
    val shopEmail: kotlin.String,
    @Json(name = "customerPhone")
    val customerPhone: kotlin.String,
    @Json(name = "openingHours")
    val openingHours: kotlin.String,
    @Json(name = "to")
    val to: kotlin.String,
    @Json(name = "oneLastStepDescription")
    val oneLastStepDescription: kotlin.String,
    @Json(name = "anEmailHasBeenSent")
    val anEmailHasBeenSent: kotlin.String,
    @Json(name = "clickTheLink")
    val clickTheLink: kotlin.String,
    @Json(name = "continueToShop")
    val continueToShop: kotlin.String,
    @Json(name = "dragToReplace")
    val dragToReplace: kotlin.String,
    @Json(name = "cancel")
    val cancel: kotlin.String,
    @Json(name = "use")
    val use: kotlin.String,
    @Json(name = "name")
    val name: kotlin.String,
    @Json(name = "username")
    val username: kotlin.String,
    @Json(name = "edit")
    val edit: kotlin.String,
    @Json(name = "sorry")
    val sorry: kotlin.String,
    @Json(name = "yourImageDidntFit")
    val yourImageDidntFit: kotlin.String,
    @Json(name = "okay")
    val okay: kotlin.String,
    @Json(name = "capture")
    val capture: kotlin.String,
    @Json(name = "fromLibrary")
    val fromLibrary: kotlin.String,
    @Json(name = "delete")
    val delete: kotlin.String,
    @Json(name = "country")
    val country: kotlin.String,
    @Json(name = "address1")
    val address1: kotlin.String,
    @Json(name = "address2")
    val address2: kotlin.String,
    @Json(name = "cityState")
    val cityState: kotlin.String,
    @Json(name = "stateProvince")
    val stateProvince: kotlin.String,
    @Json(name = "zip")
    val zip: kotlin.String,
    @Json(name = "create")
    val create: kotlin.String,
    @Json(name = "shopName")
    val shopName: kotlin.String,
    @Json(name = "remove")
    val remove: kotlin.String,
    @Json(name = "deleteWorkplace")
    val deleteWorkplace: kotlin.String,
    @Json(name = "searchArtists")
    val searchArtists: kotlin.String,
    @Json(name = "invite")
    val invite: kotlin.String,
    @Json(name = "connected")
    val connected: kotlin.String,
    @Json(name = "pending")
    val pending: kotlin.String,
    @Json(name = "searchShops")
    val searchShops: kotlin.String,
    @Json(name = "yourShopMightAlreadyExist")
    val yourShopMightAlreadyExist: kotlin.String,
    @Json(name = "ourArtists")
    val ourArtists: kotlin.String,
    @Json(name = "removeArtist")
    val removeArtist: kotlin.String,
    @Json(name = "doYouReallyWantToRemoveThisArtist")
    val doYouReallyWantToRemoveThisArtist: kotlin.String,
    @Json(name = "done")
    val done: kotlin.String,
    @Json(name = "shopDescription")
    val shopDescription: kotlin.String,
    @Json(name = "shopDescriptionExample")
    val shopDescriptionExample: kotlin.String,
    @Json(name = "editShop")
    val editShop: kotlin.String,
    @Json(name = "editContact")
    val editContact: kotlin.String,
    @Json(name = "contact")
    val contact: kotlin.String,
    @Json(name = "address")
    val address: kotlin.String,
    @Json(name = "follow")
    val follow: kotlin.String,
    @Json(name = "getInTouch")
    val getInTouch: kotlin.String,
    @Json(name = "beTheFirstToReview")
    val beTheFirstToReview: kotlin.String,
    @Json(name = "aboutShop")
    val aboutShop: kotlin.String,
    @Json(name = "gallery")
    val gallery: kotlin.String,
    @Json(name = "taggedPhotos")
    val taggedPhotos: kotlin.String,
    @Json(name = "guest")
    val guest: kotlin.String,
    @Json(name = "shopInfo")
    val shopInfo: kotlin.String,
    @Json(name = "response")
    val response: kotlin.String,
    @Json(name = "viewMore")
    val viewMore: kotlin.String,
    @Json(name = "mailUs")
    val mailUs: kotlin.String,
    @Json(name = "callUs")
    val callUs: kotlin.String,
    @Json(name = "mail")
    val mail: kotlin.String,
    @Json(name = "add")
    val add: kotlin.String,
    @Json(name = "addTattoos")
    val addTattoos: kotlin.String,
    @Json(name = "following")
    val following: kotlin.String,
    @Json(name = "isThisYourShop")
    val isThisYourShop: kotlin.String,
    @Json(name = "joinTattoodo")
    val joinTattoodo: kotlin.String,
    @Json(name = "claimThisShop")
    val claimThisShop: kotlin.String,
    @Json(name = "yourRating")
    val yourRating: kotlin.String,
    @Json(name = "howWasYourExperience")
    val howWasYourExperience: kotlin.String,
    @Json(name = "review")
    val review: kotlin.String,
    @Json(name = "tellAboutYourExperience")
    val tellAboutYourExperience: kotlin.String,
    @Json(name = "yourResponse")
    val yourResponse: kotlin.String,
    @Json(name = "claimShop")
    val claimShop: kotlin.String,
    @Json(name = "getAnAwesomeShopPage")
    val getAnAwesomeShopPage: kotlin.String,
    @Json(name = "showcaseShop")
    val showcaseShop: kotlin.String,
    @Json(name = "getStarted")
    val getStarted: kotlin.String,
    @Json(name = "reachMillionsOfCustomers")
    val reachMillionsOfCustomers: kotlin.String,
    @Json(name = "getNoticedToday")
    val getNoticedToday: kotlin.String,
    @Json(name = "connectToNewClients")
    val connectToNewClients: kotlin.String,
    @Json(name = "buildYourOnlinePresence")
    val buildYourOnlinePresence: kotlin.String,
    @Json(name = "createNew")
    val createNew: kotlin.String,
    @Json(name = "goToShop")
    val goToShop: kotlin.String,
    @Json(name = "shareYourInspiration")
    val shareYourInspiration: kotlin.String,
    @Json(name = "postATattoo")
    val postATattoo: kotlin.String,
    @Json(name = "closed")
    val closed: kotlin.String,
    @Json(name = "shareYourExperience")
    val shareYourExperience: kotlin.String,
    @Json(name = "reviewTheShop")
    val reviewTheShop: kotlin.String,
    @Json(name = "claimed")
    val claimed: kotlin.String,
    @Json(name = "invalidImageTitle")
    val invalidImageTitle: kotlin.String,
    @Json(name = "searchForCountry")
    val searchForCountry: kotlin.String,
    @Json(name = "noArtists")
    val noArtists: kotlin.String,
    @Json(name = "inviteArtist")
    val inviteArtist: kotlin.String,
    @Json(name = "reviews")
    val reviews: kotlin.String,
    @Json(name = "seeMore")
    val seeMore: kotlin.String,
    @Json(name = "noArtistsSubtitle")
    val noArtistsSubtitle: kotlin.String,
    @Json(name = "shopIsAlreadyClaimed")
    val shopIsAlreadyClaimed: kotlin.String,
    @Json(name = "termsAndConditionsText")
    val termsAndConditionsText: kotlin.String,
    @Json(name = "termsOfUse")
    val termsOfUse: kotlin.String,
    @Json(name = "privacyPolicy")
    val privacyPolicy: kotlin.String,
    @Json(name = "insights")
    val insights: kotlin.String,
    @Json(name = "profileViews")
    val profileViews: kotlin.String,
    @Json(name = "newFollowers")
    val newFollowers: kotlin.String,
    @Json(name = "contactLeads")
    val contactLeads: kotlin.String,
    @Json(name = "insightsTitle")
    val insightsTitle: kotlin.String,
    @Json(name = "insightsSubtitle")
    val insightsSubtitle: kotlin.String,
    @Json(name = "searchStudios")
    val searchStudios: kotlin.String,
    @Json(name = "info")
    val info: kotlin.String,
    @Json(name = "work")
    val work: kotlin.String,
    @Json(name = "guestArtists")
    val guestArtists: kotlin.String,
    @Json(name = "artists")
    val artists: kotlin.String,
    @Json(name = "about")
    val about: kotlin.String,
    @Json(name = "dontForgetShareYourExperience")
    val dontForgetShareYourExperience: kotlin.String,
    @Json(name = "reply")
    val reply: kotlin.String,
    @Json(name = "addWork")
    val addWork: kotlin.String,
    @Json(name = "addDescription")
    val addDescription: kotlin.String,
    @Json(name = "addArtist")
    val addArtist: kotlin.String,
    @Json(name = "alreadyReplied")
    val alreadyReplied: kotlin.String,
    @Json(name = "guestArtistFrom")
    val guestArtistFrom: kotlin.String,
    @Json(name = "whatDoesYourStudioDo")
    val whatDoesYourStudioDo: kotlin.String,
    @Json(name = "addCoverPhoto")
    val addCoverPhoto: kotlin.String,
    @Json(name = "openingHoursNotAvailable")
    val openingHoursNotAvailable: kotlin.String,
    @Json(name = "insightsPastThirtyDays")
    val insightsPastThirtyDays: kotlin.String,
    @Json(name = "emptyArtistsTitle")
    val emptyArtistsTitle: kotlin.String,
    @Json(name = "emptyArtistsSubtitle")
    val emptyArtistsSubtitle: kotlin.String,
    @Json(name = "noWork")
    val noWork: kotlin.String,
    @Json(name = "noWorkSubtitle")
    val noWorkSubtitle: kotlin.String,
    @Json(name = "viewAll")
    val viewAll: kotlin.String,
    @Json(name = "insightsHiddenTitle")
    val insightsHiddenTitle: kotlin.String,
    @Json(name = "insightsHiddenSubtitle")
    val insightsHiddenSubtitle: kotlin.String,
    @Json(name = "insightsHiddenButton")
    val insightsHiddenButton: kotlin.String,
    @Json(name = "no")
    val no: kotlin.String? = null,
    @Json(name = "yes")
    val yes: kotlin.String? = null
) 



