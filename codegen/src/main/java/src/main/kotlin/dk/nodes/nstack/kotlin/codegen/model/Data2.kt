/**
* API
* This is the public API for nstack.io  Setup an application and use Application-Id and Rest-Api-Key
*
* The version of the OpenAPI document: 1.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package dk.nodes.nstack.kotlin.codegen.model

import dk.nodes.nstack.kotlin.codegen.model.AccessCode
import dk.nodes.nstack.kotlin.codegen.model.Activity
import dk.nodes.nstack.kotlin.codegen.model.Article
import dk.nodes.nstack.kotlin.codegen.model.Artist
import dk.nodes.nstack.kotlin.codegen.model.BodyPart
import dk.nodes.nstack.kotlin.codegen.model.Booking
import dk.nodes.nstack.kotlin.codegen.model.ChangePassword
import dk.nodes.nstack.kotlin.codegen.model.Comments
import dk.nodes.nstack.kotlin.codegen.model.Communication
import dk.nodes.nstack.kotlin.codegen.model.CreateNewPost
import dk.nodes.nstack.kotlin.codegen.model.CreateNewPostDescription
import dk.nodes.nstack.kotlin.codegen.model.CreateUser1
import dk.nodes.nstack.kotlin.codegen.model.CreateUser2
import dk.nodes.nstack.kotlin.codegen.model.CreateUser3
import dk.nodes.nstack.kotlin.codegen.model.Default
import dk.nodes.nstack.kotlin.codegen.model.Discover
import dk.nodes.nstack.kotlin.codegen.model.EditImage
import dk.nodes.nstack.kotlin.codegen.model.EditProfile
import dk.nodes.nstack.kotlin.codegen.model.EndOfFeed
import dk.nodes.nstack.kotlin.codegen.model.Error
import dk.nodes.nstack.kotlin.codegen.model.Errors
import dk.nodes.nstack.kotlin.codegen.model.Feed
import dk.nodes.nstack.kotlin.codegen.model.Filters
import dk.nodes.nstack.kotlin.codegen.model.ForgotPassword
import dk.nodes.nstack.kotlin.codegen.model.Introtour
import dk.nodes.nstack.kotlin.codegen.model.Landing
import dk.nodes.nstack.kotlin.codegen.model.Language1
import dk.nodes.nstack.kotlin.codegen.model.Login
import dk.nodes.nstack.kotlin.codegen.model.Meta1
import dk.nodes.nstack.kotlin.codegen.model.News
import dk.nodes.nstack.kotlin.codegen.model.People
import dk.nodes.nstack.kotlin.codegen.model.Pin
import dk.nodes.nstack.kotlin.codegen.model.Post
import dk.nodes.nstack.kotlin.codegen.model.PushNotifications
import dk.nodes.nstack.kotlin.codegen.model.RatingPrompt
import dk.nodes.nstack.kotlin.codegen.model.Reports
import dk.nodes.nstack.kotlin.codegen.model.Search
import dk.nodes.nstack.kotlin.codegen.model.Settings
import dk.nodes.nstack.kotlin.codegen.model.Shop
import dk.nodes.nstack.kotlin.codegen.model.ShortcutMenu
import dk.nodes.nstack.kotlin.codegen.model.SignUp
import dk.nodes.nstack.kotlin.codegen.model.SuggestUsers
import dk.nodes.nstack.kotlin.codegen.model.Tattoos
import dk.nodes.nstack.kotlin.codegen.model.User
import dk.nodes.nstack.kotlin.codegen.model.UserList
import dk.nodes.nstack.kotlin.codegen.model.Welcome

import com.squareup.moshi.Json
/**
 * 
 * @param default 
 * @param settings 
 * @param welcome 
 * @param createUser1 
 * @param createUser2 
 * @param login 
 * @param forgotPassword 
 * @param language 
 * @param pushNotifications 
 * @param user 
 * @param news 
 * @param discover 
 * @param feed 
 * @param editProfile 
 * @param changePassword 
 * @param createNewPost 
 * @param suggestUsers 
 * @param editImage 
 * @param errors 
 * @param bodyPart 
 * @param search 
 * @param userList 
 * @param createNewPostDescription 
 * @param article 
 * @param comments 
 * @param activity 
 * @param accessCode 
 * @param filters 
 * @param introtour 
 * @param createUser3 
 * @param pin 
 * @param shortcutMenu 
 * @param landing 
 * @param signUp 
 * @param artist 
 * @param shop 
 * @param reports 
 * @param ratingPrompt 
 * @param tattoos 
 * @param communication 
 * @param error 
 * @param meta 
 * @param post 
 * @param people 
 * @param booking 
 * @param endOfFeed 
 */

data class Data2 (
    @Json(name = "default")
    val default: Default,
    @Json(name = "settings")
    val settings: Settings,
    @Json(name = "welcome")
    val welcome: Welcome,
    @Json(name = "createUser1")
    val createUser1: CreateUser1,
    @Json(name = "createUser2")
    val createUser2: CreateUser2,
    @Json(name = "login")
    val login: Login,
    @Json(name = "forgotPassword")
    val forgotPassword: ForgotPassword,
    @Json(name = "language")
    val language: Language1,
    @Json(name = "pushNotifications")
    val pushNotifications: PushNotifications,
    @Json(name = "user")
    val user: User,
    @Json(name = "news")
    val news: News,
    @Json(name = "discover")
    val discover: Discover,
    @Json(name = "feed")
    val feed: Feed,
    @Json(name = "editProfile")
    val editProfile: EditProfile,
    @Json(name = "changePassword")
    val changePassword: ChangePassword,
    @Json(name = "createNewPost")
    val createNewPost: CreateNewPost,
    @Json(name = "suggestUsers")
    val suggestUsers: SuggestUsers,
    @Json(name = "editImage")
    val editImage: EditImage,
    @Json(name = "errors")
    val errors: Errors,
    @Json(name = "bodyPart")
    val bodyPart: BodyPart,
    @Json(name = "search")
    val search: Search,
    @Json(name = "userList")
    val userList: UserList,
    @Json(name = "createNewPostDescription")
    val createNewPostDescription: CreateNewPostDescription,
    @Json(name = "article")
    val article: Article,
    @Json(name = "comments")
    val comments: Comments,
    @Json(name = "activity")
    val activity: Activity,
    @Json(name = "accessCode")
    val accessCode: AccessCode,
    @Json(name = "filters")
    val filters: Filters,
    @Json(name = "introtour")
    val introtour: Introtour,
    @Json(name = "createUser3")
    val createUser3: CreateUser3,
    @Json(name = "pin")
    val pin: Pin,
    @Json(name = "shortcutMenu")
    val shortcutMenu: ShortcutMenu,
    @Json(name = "landing")
    val landing: Landing,
    @Json(name = "signUp")
    val signUp: SignUp,
    @Json(name = "artist")
    val artist: Artist,
    @Json(name = "shop")
    val shop: Shop,
    @Json(name = "reports")
    val reports: Reports,
    @Json(name = "ratingPrompt")
    val ratingPrompt: RatingPrompt,
    @Json(name = "tattoos")
    val tattoos: Tattoos,
    @Json(name = "communication")
    val communication: Communication,
    @Json(name = "error")
    val error: Error,
    @Json(name = "meta")
    val meta: Meta1,
    @Json(name = "post")
    val post: Post,
    @Json(name = "people")
    val people: People,
    @Json(name = "booking")
    val booking: Booking,
    @Json(name = "endOfFeed")
    val endOfFeed: EndOfFeed
) 



