/**
* API
* This is the public API for nstack.io  Setup an application and use Application-Id and Rest-Api-Key
*
* The version of the OpenAPI document: 1.0
* 
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package dk.nodes.nstack.kotlin.codegen.model


import com.squareup.moshi.Json
/**
 * 
 * @param tattooArtistAt 
 * @param skills 
 * @param guest 
 * @param allWorkplaces 
 * @param add 
 * @param edit 
 * @param addWorkplace 
 * @param done 
 * @param areYouGuest 
 * @param startDate 
 * @param endDate 
 * @param chooseMaxSkills 
 * @param alreadyPickedTitle 
 * @param alreadyPickedDescription 
 * @param ok 
 * @param okay 
 * @param searchShops 
 * @param showYourExperience 
 * @param cantFindShop 
 * @param createShop 
 * @param noResultsFor 
 * @param theShopDoesNotExist 
 * @param cancel 
 * @param use 
 * @param name 
 * @param deleteThisPromptTitle 
 * @param deleteThisPromptDescription 
 * @param present 
 * @param createNew 
 * @param editWorkplace 
 * @param pleaseSelectStartDate 
 * @param pleaseSelectEndDateAfterStartDate 
 * @param workplaces 
 * @param now 
 * @param sharePortfolio 
 * @param noWorkplaces 
 * @param noWorkplacesSubtitle 
 * @param delete 
 * @param searchArtists 
 * @param work 
 * @param preferredStyles 
 * @param worksAt 
 * @param about 
 * @param whereDoYouWork 
 * @param previousWorkplaces 
 * @param guestArtist 
 * @param tabWork 
 * @param tabBoards 
 * @param tabAbout 
 * @param addBio 
 * @param noBio 
 * @param styles 
 * @param noStyles 
 * @param noStylesSubtitle 
 * @param addStyles 
 * @param tabMyCollection 
 */

data class Artist (
    @Json(name = "tattooArtistAt")
    val tattooArtistAt: kotlin.String,
    @Json(name = "skills")
    val skills: kotlin.String,
    @Json(name = "guest")
    val guest: kotlin.String,
    @Json(name = "allWorkplaces")
    val allWorkplaces: kotlin.String,
    @Json(name = "add")
    val add: kotlin.String,
    @Json(name = "edit")
    val edit: kotlin.String,
    @Json(name = "addWorkplace")
    val addWorkplace: kotlin.String,
    @Json(name = "done")
    val done: kotlin.String,
    @Json(name = "areYouGuest")
    val areYouGuest: kotlin.String,
    @Json(name = "startDate")
    val startDate: kotlin.String,
    @Json(name = "endDate")
    val endDate: kotlin.String,
    @Json(name = "chooseMaxSkills")
    val chooseMaxSkills: kotlin.String,
    @Json(name = "alreadyPickedTitle")
    val alreadyPickedTitle: kotlin.String,
    @Json(name = "alreadyPickedDescription")
    val alreadyPickedDescription: kotlin.String,
    @Json(name = "ok")
    val ok: kotlin.String,
    @Json(name = "okay")
    val okay: kotlin.String,
    @Json(name = "searchShops")
    val searchShops: kotlin.String,
    @Json(name = "showYourExperience")
    val showYourExperience: kotlin.String,
    @Json(name = "cantFindShop")
    val cantFindShop: kotlin.String,
    @Json(name = "createShop")
    val createShop: kotlin.String,
    @Json(name = "noResultsFor")
    val noResultsFor: kotlin.String,
    @Json(name = "theShopDoesNotExist")
    val theShopDoesNotExist: kotlin.String,
    @Json(name = "cancel")
    val cancel: kotlin.String,
    @Json(name = "use")
    val use: kotlin.String,
    @Json(name = "name")
    val name: kotlin.String,
    @Json(name = "deleteThisPromptTitle")
    val deleteThisPromptTitle: kotlin.String,
    @Json(name = "deleteThisPromptDescription")
    val deleteThisPromptDescription: kotlin.String,
    @Json(name = "present")
    val present: kotlin.String,
    @Json(name = "createNew")
    val createNew: kotlin.String,
    @Json(name = "editWorkplace")
    val editWorkplace: kotlin.String,
    @Json(name = "pleaseSelectStartDate")
    val pleaseSelectStartDate: kotlin.String,
    @Json(name = "pleaseSelectEndDateAfterStartDate")
    val pleaseSelectEndDateAfterStartDate: kotlin.String,
    @Json(name = "workplaces")
    val workplaces: kotlin.String,
    @Json(name = "now")
    val now: kotlin.String,
    @Json(name = "sharePortfolio")
    val sharePortfolio: kotlin.String,
    @Json(name = "noWorkplaces")
    val noWorkplaces: kotlin.String,
    @Json(name = "noWorkplacesSubtitle")
    val noWorkplacesSubtitle: kotlin.String,
    @Json(name = "delete")
    val delete: kotlin.String,
    @Json(name = "searchArtists")
    val searchArtists: kotlin.String,
    @Json(name = "work")
    val work: kotlin.String,
    @Json(name = "preferredStyles")
    val preferredStyles: kotlin.String,
    @Json(name = "worksAt")
    val worksAt: kotlin.String,
    @Json(name = "about")
    val about: kotlin.String,
    @Json(name = "whereDoYouWork")
    val whereDoYouWork: kotlin.String,
    @Json(name = "previousWorkplaces")
    val previousWorkplaces: kotlin.String,
    @Json(name = "guestArtist")
    val guestArtist: kotlin.String,
    @Json(name = "tabWork")
    val tabWork: kotlin.String,
    @Json(name = "tabBoards")
    val tabBoards: kotlin.String,
    @Json(name = "tabAbout")
    val tabAbout: kotlin.String,
    @Json(name = "addBio")
    val addBio: kotlin.String,
    @Json(name = "noBio")
    val noBio: kotlin.String,
    @Json(name = "styles")
    val styles: kotlin.String,
    @Json(name = "noStyles")
    val noStyles: kotlin.String,
    @Json(name = "noStylesSubtitle")
    val noStylesSubtitle: kotlin.String,
    @Json(name = "addStyles")
    val addStyles: kotlin.String,
    @Json(name = "tabMyCollection")
    val tabMyCollection: kotlin.String
) 



