//
// IPAddressesAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation



open class IPAddressesAPI {
    /**
     GetShow112
     
     - parameter ip: (query)  
     - parameter xApplicationId: (header)  
     - parameter xRestApiKey: (header)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getShow112(ip: String, xApplicationId: String, xRestApiKey: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        getShow112WithRequestBuilder(ip: ip, xApplicationId: xApplicationId, xRestApiKey: xRestApiKey).execute(apiResponseQueue) { result -> Void in
            switch result {
            case .success:
                completion((), nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     GetShow112
     - GET /api/v1/geographic/ip-address
     - Retrieve details based on the requestee's ip address  #### Request details Method:    `GET`  URL:    `/api/v1/geographic/ip-address`  #### Headers  `X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_  `X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_  #### Query parameters (filters) `ip` (string) _Eg: [1.2.3.4] Default is your own_  #### Response codes(s) `200` OK  `445` Entity not found
     - parameter ip: (query)  
     - parameter xApplicationId: (header)  
     - parameter xRestApiKey: (header)  
     - returns: RequestBuilder<Void> 
     */
    open class func getShow112WithRequestBuilder(ip: String, xApplicationId: String, xRestApiKey: String) -> RequestBuilder<Void> {
        let path = "/api/v1/geographic/ip-address"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "ip": ip.encodeToJSON()
        ])
        let nillableHeaders: [String: Any?] = [
            "X-Application-Id": xApplicationId.encodeToJSON(),
            "X-Rest-Api-Key": xRestApiKey.encodeToJSON()
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = OpenAPIClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

    /**
     GetShow12345
     
     - parameter ip: (query)  
     - parameter xApplicationId: (header)  
     - parameter xRestApiKey: (header)  
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getShow12345(ip: String, xApplicationId: String, xRestApiKey: String, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: Void?,_ error: Error?) -> Void)) {
        getShow12345WithRequestBuilder(ip: ip, xApplicationId: xApplicationId, xRestApiKey: xRestApiKey).execute(apiResponseQueue) { result -> Void in
            switch result {
            case .success:
                completion((), nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     GetShow12345
     - GET /api/v2/geographic/ip-address
     - Retrieve details based on the requestee's ip address  #### Request details Method:    `GET`  URL:    `/api/v2/geographic/ip-address`  #### Headers  `X-Application-Id` (string) **required** _Application ID from [NStack](https://nstack.io)_  `X-Rest-Api-Key` (string) **required** _Rest API key from [NStack](https://nstack.io)_  #### Query parameters (filters) `ip` (string) _Eg: [1.2.3.4] Default is your own_  #### Response codes(s) `200` OK  `404` Entity not found
     - parameter ip: (query)  
     - parameter xApplicationId: (header)  
     - parameter xRestApiKey: (header)  
     - returns: RequestBuilder<Void> 
     */
    open class func getShow12345WithRequestBuilder(ip: String, xApplicationId: String, xRestApiKey: String) -> RequestBuilder<Void> {
        let path = "/api/v2/geographic/ip-address"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String:Any]? = nil
        
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "ip": ip.encodeToJSON()
        ])
        let nillableHeaders: [String: Any?] = [
            "X-Application-Id": xApplicationId.encodeToJSON(),
            "X-Rest-Api-Key": xRestApiKey.encodeToJSON()
        ]
        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<Void>.Type = OpenAPIClientAPI.requestBuilderFactory.getNonDecodableBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false, headers: headerParameters)
    }

}
