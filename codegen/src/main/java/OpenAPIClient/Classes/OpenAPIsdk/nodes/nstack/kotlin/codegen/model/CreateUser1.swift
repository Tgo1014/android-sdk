//
// CreateUser1.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation


public struct CreateUser1: Codable {

    public var title: String
    public var username: String
    public var email: String
    public var usernamePlaceholder: String
    public var emailPlaceholder: String
    public var signupButton: String
    public var usernameNotAvailableAlertTitle: String
    public var usernameNotAvailableAlertMessage: String
    public var emailNotAvailableAlertMessage: String
    public var emailNotAvailableAlertTitle: String
    public var usernameAndEmailNotAvailableAlertMessage: String
    public var usernameAndEmailNotAvailableAlertTitle: String
    public var invalidOrMissingInputAlertTitle: String
    public var invalidOrMissingInputAlertMessage: String
    public var expiredToken: String
    public var alreadyHaveAccount: String
    public var _required: String
    public var invalidUsername: String
    public var invalidEmail: String
    public var valid: String
    public var alreadyInUse: String
    public var checking: String
    public var subtitle: String
    public var inUse: String
    public var invalid: String

    public init(title: String, username: String, email: String, usernamePlaceholder: String, emailPlaceholder: String, signupButton: String, usernameNotAvailableAlertTitle: String, usernameNotAvailableAlertMessage: String, emailNotAvailableAlertMessage: String, emailNotAvailableAlertTitle: String, usernameAndEmailNotAvailableAlertMessage: String, usernameAndEmailNotAvailableAlertTitle: String, invalidOrMissingInputAlertTitle: String, invalidOrMissingInputAlertMessage: String, expiredToken: String, alreadyHaveAccount: String, _required: String, invalidUsername: String, invalidEmail: String, valid: String, alreadyInUse: String, checking: String, subtitle: String, inUse: String, invalid: String) {
        self.title = title
        self.username = username
        self.email = email
        self.usernamePlaceholder = usernamePlaceholder
        self.emailPlaceholder = emailPlaceholder
        self.signupButton = signupButton
        self.usernameNotAvailableAlertTitle = usernameNotAvailableAlertTitle
        self.usernameNotAvailableAlertMessage = usernameNotAvailableAlertMessage
        self.emailNotAvailableAlertMessage = emailNotAvailableAlertMessage
        self.emailNotAvailableAlertTitle = emailNotAvailableAlertTitle
        self.usernameAndEmailNotAvailableAlertMessage = usernameAndEmailNotAvailableAlertMessage
        self.usernameAndEmailNotAvailableAlertTitle = usernameAndEmailNotAvailableAlertTitle
        self.invalidOrMissingInputAlertTitle = invalidOrMissingInputAlertTitle
        self.invalidOrMissingInputAlertMessage = invalidOrMissingInputAlertMessage
        self.expiredToken = expiredToken
        self.alreadyHaveAccount = alreadyHaveAccount
        self._required = _required
        self.invalidUsername = invalidUsername
        self.invalidEmail = invalidEmail
        self.valid = valid
        self.alreadyInUse = alreadyInUse
        self.checking = checking
        self.subtitle = subtitle
        self.inUse = inUse
        self.invalid = invalid
    }

    public enum CodingKeys: String, CodingKey, CaseIterable { 
        case title
        case username
        case email
        case usernamePlaceholder
        case emailPlaceholder
        case signupButton
        case usernameNotAvailableAlertTitle
        case usernameNotAvailableAlertMessage
        case emailNotAvailableAlertMessage
        case emailNotAvailableAlertTitle
        case usernameAndEmailNotAvailableAlertMessage
        case usernameAndEmailNotAvailableAlertTitle
        case invalidOrMissingInputAlertTitle
        case invalidOrMissingInputAlertMessage
        case expiredToken
        case alreadyHaveAccount
        case _required = "required"
        case invalidUsername
        case invalidEmail
        case valid
        case alreadyInUse
        case checking
        case subtitle
        case inUse
        case invalid
    }

}
